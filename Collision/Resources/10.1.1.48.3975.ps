%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 595.28 841.89 0 1 16 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Bold FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
3 1 /Symbol FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: A4
%%EndPaperSize
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(1) 318.61 71.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 24 Q
(Collision prediction of a moving object) 125.99 756.27 T
(within a virtual world) 210.66 726.27 T
1 12 Q
(P) 219.42 686.27 T
(. Sandoz, P) 225.65 686.27 T
(. Sharkey and D. Roberts) 281.22 686.27 T
(email) 182.73 666.27 T
0 F
(: {cybpds, cybpms, cybdjr}@cyber) 210.72 666.27 T
(.reading.ac.uk) 379.61 666.27 T
1 F
(Abstract) 292.66 631.27 T
0 10 Q
-0.05 (This paper provides a solution for predicting moving/moving and moving/) 170.98 615.6 P
0.84 (static collisions of objects within a virtual environment. Feasible predic-) 170.99 597.6 P
0.43 (tion in real-time virtual worlds can be obtained by encompassing moving) 170.99 579.6 P
0.94 (objects within a sphere and static objects within a convex polygon. Fast) 170.99 561.6 P
0.43 (solutions are then attainable by describing the movement of objects para-) 170.99 543.6 P
(metrically in time as a polynomial.) 170.99 525.6 T
1 F
(Key W) 170.07 495.6 T
(ords:) 199.24 495.6 T
0 F
(real-time, collision detection, collision prediction, V) 223.96 495.6 T
(oronoi) 432.1 495.6 T
(diagram, distance function.) 226.76 483.6 T
1 16 Q
(1   Intr) 107.99 443.6 T
(oduction) 155.25 443.6 T
0 12 Q
0.7 (This paper advances a novel method of collision detection, \336rst proposed in [Sandoz) 107.99 420.27 P
0.45 (& Sharkey 1994], that performs in continuous time, rather than the prevalent discrete) 107.99 399.27 P
-0.3 (implementation of \324frame rates\325. The collision detection technique relies on time based) 107.99 378.27 P
(object movement, de\336ned parametrically to predict when collisions occur) 107.99 357.27 T
(.) 460.27 357.27 T
0.51 (Collision prediction is a basic component of a real-time predictive architecture for) 122.16 332.27 P
-0.16 (multi-user virtual worlds [Roberts & Sharkey 1995]. The central idea is to create a vir-) 107.99 311.27 P
0.6 (tual world that is dependent on a global real time clock. The synchronisation of each) 107.99 290.27 P
0.03 (user platform to the real time clock allows each to have asynchronous graphical frame) 107.99 269.27 P
1.41 (rates while still maintaining synchronisity with the virtual environment. Alternative) 107.99 248.27 P
1.67 (architectures such as NPSNET [Macedonia) 107.99 227.27 P
2 F
1.67 (et al) 327.3 227.27 P
0 F
1.67 (. 1994] and DIVE [Carlsson) 349.98 227.27 P
2 F
1.67 (et al) 496.32 227.27 P
0 F
1.67 (.) 518.99 227.27 P
0.58 (1993] are asynchronous, but have no concept of global time, so that an action broad-) 107.99 206.27 P
0.5 (cast from one platform will begin later on the receiving platforms, since it takes time) 107.99 185.27 P
0.83 (for the action to propagate. Here however) 107.99 164.27 P
0.83 (, the real-time architecture ensures that the) 312.75 164.27 P
0.21 (receiving platforms obtain actions that are time stamped, so they can adjust the action) 107.99 143.27 P
0.67 (according to the global clock. Synchronisity thus enables certain tasks, such as colli-) 107.99 122.27 P
106.29 778.11 531.49 787.29 R
7 X
V
0 10 Q
0 X
(Presented at VR W) 106.29 780.62 T
(orld \32496, Febuary 13-15th, Stuttgart, Germany) 182.42 780.62 T
(.) 366.75 780.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(2) 318.61 71.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.48 (sion prediction of objects to be performed locally by each platform or within a group) 107.99 764.27 P
(of local computers operating as a local area network \050LAN\051.) 107.99 743.27 T
1.99 (In general, objects within virtual environments may be de\336ned using polygons.) 122.16 718.27 P
2.47 (Collision prediction of such polygons has been previously achieved [W) 107.99 697.27 P
2.47 (ang 1994,) 472.19 697.27 P
0.37 (Canny 1986, Boyse 1979]. All methods restrict motion to linear and angular velocity) 107.99 676.27 P
0.37 (.) 518.99 676.27 P
0.62 (W) 107.99 655.27 P
0.62 (ang also restrains motion to the plane; and Boyse to separate periods of translation) 118.36 655.27 P
0.69 (and rotation about a \336xed axis. However) 107.99 634.27 P
0.69 (, prediction of a general translating, rotating) 306.58 634.27 P
0.61 (polygon is a computationally intensive task which, given the current processing plat-) 107.99 613.27 P
(forms, makes it impractical for real-time applications.) 107.99 592.27 T
1.72 (In this paper we develop the underlying algorithms required for predicting both) 122.16 567.27 P
1.21 (moving/moving and moving/static collisions, given pre-de\336ned parametric paths for) 107.99 546.27 P
0.81 (object movement. By encompassing each object within a sphere we can provide and) 107.99 525.27 P
0.43 (ef) 107.99 504.27 P
0.43 (\336cient and elegant solution that is fast to compute. Section 2 presents the algorithm) 117.1 504.27 P
0.03 (for predicting a collision between two moving spheres and Section 3 extends the solu-) 107.99 483.27 P
-0.29 (tion to include static convex polygons. Finally Section 4 proposes a technique for lar) 107.99 462.27 P
-0.29 (ge) 510.66 462.27 P
(scale environments.) 107.99 441.27 T
1 16 Q
(2   Pr) 107.99 393.6 T
(ediction between two moving spher) 144.58 393.6 T
(es) 384.28 393.6 T
0 12 Q
0.2 (T) 107.99 370.27 P
0.2 (o predict a collision a time based function representing the distance between the two) 114.48 370.27 P
1.54 (spheres needs to be obtained. Given this function it\325) 107.99 349.27 P
1.54 (s roots may be calculated; and) 369.3 349.27 P
(from these an explicit solution may then be extracted.) 107.99 328.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
(FIGURE 1. Distance between spher) 187.26 188.82 T
(es) 339.01 188.82 T
187.26 198.49 451.14 312.27 C
193.26 200.49 445.14 306.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
7 X
0 0 0 1 0 0 0 K
90 450 31.5 33.75 409.2 239.39 G
3 H
2 Z
0 X
90 450 31.5 33.75 409.2 239.39 A
90 450 2.25 2.25 409.79 238.72 G
407.04 230.94 410.04 236.14 413.04 230.94 410.04 230.94 4 Y
V
413.04 212.99 410.04 207.79 407.04 212.99 410.04 212.99 4 Y
V
410.04 230.94 410.04 212.99 2 L
1 H
0 Z
N
7 X
90 450 31.5 33.75 229.2 239.39 G
3 H
2 Z
0 X
90 450 31.5 33.75 229.2 239.39 A
90 450 2.25 2.25 229.79 238.72 G
1 12 Q
(p) 222.88 251.31 T
0 9.6 Q
(1) 229.55 248.31 T
1 12 Q
(p) 402.03 251.31 T
0 9.6 Q
(2) 408.71 248.31 T
0 12 Q
(r) 216.54 221.48 T
0 9.6 Q
(1) 220.54 218.48 T
0 12 Q
(r) 395.88 221.48 T
0 9.6 Q
(2) 399.87 218.48 T
265.2 241.64 373.2 241.64 2 L
1 H
N
229.2 286.64 409.2 286.64 2 L
N
229.2 277.64 229.2 295.64 2 L
N
409.2 277.64 409.2 295.64 2 L
N
265.2 232.64 265.2 250.64 2 L
N
373.2 232.64 373.2 250.64 2 L
N
2 12 Q
(d) 313.41 296.62 T
2 9 Q
(e) 319.86 292.42 T
2 12 Q
(D) 312.08 225.76 T
2 9 Q
(e) 321.2 221.56 T
226.79 230.69 229.79 235.89 232.79 230.69 229.79 230.69 4 Y
V
232.79 212.74 229.79 207.54 226.79 212.74 229.79 212.74 4 Y
V
229.79 230.69 229.79 212.74 2 L
0 Z
N
187.26 198.49 451.14 312.27 C
-0.01 0 595.29 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 2
%%Page: "3" 3
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(3) 318.61 71.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.8 (The distance between the centres and surfaces of two spheres, shown in Figure) 122.16 764.27 P
0.8 (1,) 512.99 764.27 P
0.07 (are) 107.99 743.27 P
0.07 ( and) 139.17 743.27 P
0.07 ( respectively) 178.76 743.27 P
0.07 (. The square of the Euclidean distance) 239.03 743.27 P
0.07 ( may be obtained) 439.45 743.27 P
(from the respective positions of the two spheres:) 107.99 722.27 T
0 10 Q
(\0501\051) 510.33 684.32 T
0 12 Q
0.89 (where) 107.99 661.87 P
0.89 (,) 156.48 661.87 P
0.89 ( are the positions. Therefore) 178.66 661.87 P
0.89 (, the square of the Euclidean distance) 337.7 661.87 P
(between the surfaces of the two spheres is:) 107.99 640.87 T
0 10 Q
(\0502\051) 510.33 580.49 T
0 12 Q
-0.16 (where) 107.99 533.29 P
-0.16 ( and) 153.43 533.29 P
-0.16 ( are the radii. However this function is inappropriate to use, since it is) 189.73 533.29 P
0.8 (always) 107.99 512.29 P
3 F
0.8 (\263) 145.11 512.29 P
0 F
0.8 ( 0, thus precluding a search for a collision by looking for intersections; and) 151.7 512.29 P
-0.26 (contains a square root operation. It is necessary \336nd a dif) 107.99 491.29 P
-0.26 (ferent function. When the two) 378.75 491.29 P
2.18 (spheres are touching,) 107.99 470.29 P
2.18 (, then) 260.05 470.29 P
2.18 (; and when the spheres intersect each) 330.96 470.29 P
-0.25 (other) 107.99 449.29 P
-0.25 (. From these observations a \324measure\325 of the distance between the surfaces) 166.11 449.29 P
(of the spheres,) 107.99 428.29 T
(, can be proposed as:) 192.3 428.29 T
0 10 Q
(\0503\051) 510.33 390.34 T
0 12 Q
0.04 (Equation 3 now has the two important properties needed, when) 122.16 367.89 P
0.04 ( the spheres) 465.26 367.89 P
0.24 (are touching and when) 107.99 346.89 P
0.24 ( the spheres are intersecting. The two distance functions) 251.16 346.89 P
(used can now be parameterised as functions of time:) 107.99 325.89 T
0 10 Q
(\0504\051) 510.33 287.94 T
(\0505\051) 510.33 254.54 T
0 12 Q
0.62 (It is assumed that both radii remain constant over all time. The collision times of the) 107.99 232.1 P
0.9 (spheres \050when the spheres are touching\051 are now encapsulated in the roots of) 107.99 211.1 P
0.9 (.) 518.99 211.1 P
0.74 (By of) 107.99 190.1 P
0.74 (fsetting) 135.51 190.1 P
0.74 ( by a constant) 206.96 190.1 P
0.74 ( we obtain the collision times as real roots, see) 292.01 190.1 P
(Figure 2.) 107.99 169.1 T
125.71 734.82 139.17 753.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 126.71 743.27 T
2 9 Q
(e) 133.17 739.07 T
-0.01 0 595.29 841.89 C
162.64 734.82 178.76 753.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 163.64 743.27 T
2 9 Q
(e) 172.76 739.07 T
-0.01 0 595.29 841.89 C
425.49 734.82 439.45 758.22 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 426.49 743.27 T
2 9 Q
(e) 432.95 739.07 T
0 F
(2) 432.95 750.47 T
-0.01 0 595.29 841.89 C
238.03 675.87 380.29 699.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 240.35 684.32 T
2 9 Q
(e) 246.81 680.12 T
0 F
(2) 246.81 691.52 T
1 12 Q
(p) 277.22 684.32 T
0 9 Q
(1) 284.35 680.12 T
1 12 Q
(p) 300.84 684.32 T
0 9 Q
(2) 307.97 680.12 T
0 12 Q
(\320) 291.84 684.32 T
3 F
(\050) 272.07 684.32 T
(\051) 313.02 684.32 T
1 F
(p) 335.17 684.32 T
0 9 Q
(1) 342.3 680.12 T
1 12 Q
(p) 358.79 684.32 T
0 9 Q
(2) 365.92 680.12 T
0 12 Q
(\320) 349.79 684.32 T
3 F
(\050) 330.02 684.32 T
(\051) 370.97 684.32 T
(\327) 322.02 684.32 T
0 F
(=) 257.3 684.32 T
-0.01 0 595.29 841.89 C
141.2 653.42 156.48 671.87 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(p) 142.53 661.87 T
0 9 Q
(1) 149.65 657.67 T
-0.01 0 595.29 841.89 C
163.37 653.42 178.66 671.87 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(p) 164.7 661.87 T
0 9 Q
(2) 171.83 657.67 T
-0.01 0 595.29 841.89 C
321.07 653.42 337.69 676.82 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 322.08 661.87 T
2 9 Q
(e) 331.2 657.67 T
0 F
(2) 331.2 669.07 T
-0.01 0 595.29 841.89 C
252.83 547.29 365.49 617.87 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(r) 262.78 607.87 T
(r) 286.21 607.87 T
0 9 Q
(1) 291.33 603.67 T
2 12 Q
(r) 308.6 607.87 T
0 9 Q
(2) 313.72 603.67 T
0 12 Q
(+) 298.83 607.87 T
(=) 273.45 607.87 T
2 F
(D) 253.83 581.48 T
2 9 Q
(e) 262.95 577.28 T
0 F
(2) 262.95 588.67 T
2 12 Q
(d) 301.76 581.48 T
2 9 Q
(e) 308.21 577.28 T
0 F
(2) 308.81 585.08 T
2 12 Q
(r) 325.31 581.48 T
0 F
(\320) 316.31 581.48 T
3 F
(\350) 286.21 577.61 T
(\370) 330.53 577.61 T
(\346) 286.21 587.9 T
(\366) 330.53 587.9 T
0 9 Q
(2) 337.13 588.01 T
0 12 Q
(=) 273.45 581.48 T
2 F
(d) 286.21 555.74 T
2 9 Q
(e) 292.67 551.54 T
0 F
(2) 293.27 559.34 T
2 12 Q
(r) 310.53 555.74 T
0 9 Q
(2) 315.8 559.34 T
0 12 Q
(2) 327.46 555.74 T
(\320) 321.01 555.74 T
2 F
(r) 334.17 555.74 T
(d) 347.94 555.74 T
0 9 Q
(2) 354.54 559.34 T
2 F
(e) 359.49 552.22 T
0 12 Q
(+) 300.76 555.74 T
(=) 273.45 555.74 T
312.11 593.56 301.76 593.56 298.16 576.77 3 L
0.54 H
2 Z
N
298.16 576.77 295.76 581.4 294.56 579.08 3 L
N
362.29 567.83 347.94 567.83 344.34 551.71 3 L
N
344.34 551.71 341.94 556.17 340.74 553.94 3 L
N
-0.01 0 595.29 841.89 C
140.15 524.84 153.43 543.29 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(r) 141.48 533.29 T
0 9 Q
(1) 146.6 529.09 T
-0.01 0 595.29 841.89 C
176.45 524.84 189.73 543.29 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(r) 177.78 533.29 T
0 9 Q
(2) 182.9 529.09 T
-0.01 0 595.29 841.89 C
219.17 461.84 260.05 480.29 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 220.17 470.29 T
2 9 Q
(e) 229.29 466.09 T
0 12 Q
(0) 252.05 470.29 T
(=) 239.29 470.29 T
-0.01 0 595.29 841.89 C
294.08 461.84 330.96 480.29 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 295.08 470.29 T
2 9 Q
(e) 301.53 466.09 T
2 12 Q
(r) 324.29 470.29 T
0 F
(=) 311.52 470.29 T
-0.01 0 595.29 841.89 C
135.4 440.84 166.11 459.29 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 136.4 449.29 T
2 9 Q
(e) 142.86 445.09 T
2 12 Q
(r) 159.44 449.29 T
3 F
(<) 149.85 449.29 T
-0.01 0 595.29 841.89 C
180.64 423.29 192.3 438.29 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 181.64 428.29 T
-0.01 0 595.29 841.89 C
277.59 381.89 340.73 405.29 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 278.59 390.34 T
(d) 306.01 390.34 T
2 9 Q
(e) 312.47 386.14 T
0 F
(2) 312.47 397.54 T
2 12 Q
(r) 328.96 390.34 T
0 9 Q
(2) 334.23 393.94 T
0 12 Q
(\320) 319.97 390.34 T
(=) 293.25 390.34 T
-0.01 0 595.29 841.89 C
428.83 362.89 465.26 377.89 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 429.83 367.89 T
0 F
(0) 457.26 367.89 T
(=) 444.5 367.89 T
-0.01 0 595.29 841.89 C
220.91 341.89 251.16 356.89 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 221.91 346.89 T
0 F
(0) 243.16 346.89 T
3 F
(<) 233.57 346.89 T
-0.01 0 595.29 841.89 C
193.67 279.49 424.65 302.89 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 194.67 287.94 T
2 9 Q
(e) 201.12 283.74 T
0 F
(2) 201.12 295.14 T
2 12 Q
(t) 213.48 287.94 T
3 F
(\050) 208.33 287.94 T
(\051) 217.37 287.94 T
2 F
(P) 249.28 287.94 T
0 9 Q
(1) 257.07 283.74 T
2 12 Q
(t) 269.43 287.94 T
3 F
(\050) 264.28 287.94 T
(\051) 273.31 287.94 T
2 F
(P) 291.31 287.94 T
0 9 Q
(2) 299.1 283.74 T
2 12 Q
(t) 311.45 287.94 T
3 F
(\050) 306.31 287.94 T
(\051) 315.34 287.94 T
0 F
(\320) 282.31 287.94 T
3 F
(\050) 244.13 287.94 T
(\051) 321.89 287.94 T
2 F
(P) 344.04 287.94 T
0 9 Q
(1) 351.83 283.74 T
2 12 Q
(t) 364.18 287.94 T
3 F
(\050) 359.04 287.94 T
(\051) 368.07 287.94 T
2 F
(P) 386.07 287.94 T
0 9 Q
(2) 393.86 283.74 T
2 12 Q
(t) 406.21 287.94 T
3 F
(\050) 401.07 287.94 T
(\051) 410.1 287.94 T
0 F
(\320) 377.07 287.94 T
3 F
(\050) 338.89 287.94 T
(\051) 416.65 287.94 T
(\327) 330.89 287.94 T
0 F
(=) 229.37 287.94 T
-0.01 0 595.29 841.89 C
259.84 246.09 358.48 269.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 260.84 254.54 T
(t) 277.36 254.54 T
3 F
(\050) 272.22 254.54 T
(\051) 281.25 254.54 T
2 F
(d) 306.01 254.54 T
2 9 Q
(e) 312.47 250.35 T
0 F
(2) 312.47 261.74 T
2 12 Q
(t) 324.83 254.54 T
3 F
(\050) 319.68 254.54 T
(\051) 328.71 254.54 T
2 F
(r) 346.71 254.54 T
0 9 Q
(2) 351.98 258.14 T
0 12 Q
(\320) 337.71 254.54 T
(=) 293.25 254.54 T
-0.01 0 595.29 841.89 C
491.26 206.1 518.99 221.1 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 492.26 211.1 T
(t) 508.78 211.1 T
3 F
(\050) 503.63 211.1 T
(\051) 512.67 211.1 T
-0.01 0 595.29 841.89 C
175.26 181.65 206.96 205.04 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 176.26 190.1 T
2 9 Q
(e) 182.71 185.9 T
0 F
(2) 182.71 197.29 T
2 12 Q
(t) 195.07 190.1 T
3 F
(\050) 189.92 190.1 T
(\051) 198.96 190.1 T
-0.01 0 595.29 841.89 C
279.24 185.1 292.01 201.45 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(r) 280.24 190.1 T
0 9 Q
(2) 285.51 193.7 T
-0.01 0 595.29 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 3
%%Page: "4" 4
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(4) 318.61 71.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.76 (Assumptions can now be made on the properties of the sphere movement,) 122.16 467.05 P
-0.09 (and) 107.99 446.05 P
-0.09 (. If the movement of both spheres can be described respectively as two pol-) 161.26 446.05 P
0.69 (ynomials in time, then the coef) 107.99 425.05 P
0.69 (\336cients obtained from the polynomials can be used to) 259.86 425.05 P
0.27 (generate a polynomial representing) 107.99 404.05 P
0.27 ( and therefore) 312.73 404.05 P
0.27 (. Consider the paths of) 412.58 404.05 P
(the two spheres are represented by the equations:) 107.99 383.05 T
0 10 Q
(\0506\051) 510.33 336.66 T
1 F
0.14 (FIGURE 2. Offsetting the distance function.) 183.89 573.5 P
0.14 ( may contain no r) 406.96 573.5 P
0.14 (eal r) 482.32 573.5 P
0.14 (oots;) 501.44 573.5 P
0.26 (two identical r) 183.89 550.39 P
0.26 (eal r) 245.88 550.39 P
0.26 (oots can occur when the two centr) 265.11 550.39 P
0.26 (es of the spher) 411.44 550.39 P
0.26 (es coincide.) 473.4 550.39 P
2.24 (Offsetting this function to obtain) 183.89 529.05 P
2.24 (, pr) 366.44 529.05 P
2.24 (oduces two distinct r) 383.5 529.05 P
2.24 (oots, each) 478.09 529.05 P
3.26 (denoting the times when the two spher) 183.89 509.39 P
3.26 (es touch each other) 367.17 509.39 P
3.26 (. The interval) 457.96 509.39 P
(underneath the time axis, indicates that the spher) 183.89 491.39 T
(es intersect.) 394.26 491.39 T
183.89 591.45 454.51 748.27 C
190.67 593.45 447.73 742.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
231.16 725.98 234.16 731.18 237.16 725.98 234.16 725.98 4 Y
0 X
0 0 0 1 0 0 0 K
V
234.16 725.98 234.16 603.62 2 L
0.5 H
2 Z
N
420.3 642.05 425.5 639.05 420.3 636.05 420.3 639.05 4 Y
V
212.9 639.05 420.3 639.05 2 L
N
241.25 709.92 M
 262.51 695.75 263.49 680.61 267.43 666.65 D
 275.59 637.71 311.21 611.26 326.83 635.15 D
 347.67 667 385.84 659.98 401.75 687.65 D
1 H
N
90 450 1.77 1.77 283.87 639.58 G
0.5 H
90 450 1.77 1.77 283.87 639.58 A
90 450 1.77 1.77 329.87 639.08 G
90 450 1.77 1.77 329.87 639.08 A
241.25 733.95 M
 262.51 719.78 263.49 704.64 267.43 690.68 D
 275.59 661.74 311.21 635.29 326.83 659.18 D
 347.67 691.03 385.84 684.02 401.75 711.68 D
1 H
3 X
N
2 12 Q
0 X
(d) 410.35 620.93 T
2 9 Q
(e) 416.81 616.73 T
0 F
(2) 416.81 628.13 T
2 12 Q
(t) 429.16 620.93 T
3 F
(\050) 424.02 620.93 T
(\051) 433.05 620.93 T
2 F
(D) 410.35 603.3 T
(t) 426.87 603.3 T
3 F
(\050) 421.73 603.3 T
(\051) 430.76 603.3 T
382 620.56 403.26 620.56 2 L
3 X
N
382 606.39 403.26 606.39 2 L
0 X
N
0 10 Q
(time) 399.66 643.99 T
J
310.89 625.56 232.93 625.56 2 L
J
310.89 625.56 310.14 625.56 2 L
0.5 H
N
[1.499 4.497] 1.499 I
310.14 625.56 233.69 625.56 2 L
N
J
233.69 625.56 232.93 625.56 2 L
N
J
311.14 649.41 233.18 649.41 2 L
J
311.14 649.41 310.39 649.41 2 L
N
[1.499 4.497] 1.499 I
310.39 649.41 233.94 649.41 2 L
N
J
233.94 649.41 233.18 649.41 2 L
N
J
233.68 649.41 231.35 649.41 2 L
1 H
N
233.68 625.65 231.35 625.65 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
224.74 645.42 227.24 649.75 229.74 645.42 227.24 645.42 4 Y
V
229.74 630.08 227.24 625.75 224.74 630.08 227.24 630.08 4 Y
V
227.24 645.42 227.24 630.08 2 L
0 Z
N
2 9 Q
(r) 213.74 626.18 T
0 7 Q
(2) 217.58 631.66 T
183.89 591.45 454.51 748.27 C
-0.01 0 595.29 841.89 C
375.26 565.05 406.96 588.45 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 376.26 573.5 T
2 9 Q
(e) 382.71 569.3 T
0 F
(2) 382.71 580.7 T
2 12 Q
(t) 395.07 573.5 T
3 F
(\050) 389.92 573.5 T
(\051) 398.96 573.5 T
-0.01 0 595.29 841.89 C
337.03 524.05 366.44 539.05 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 338.04 529.05 T
(t) 354.56 529.05 T
3 F
(\050) 349.41 529.05 T
(\051) 358.44 529.05 T
-0.01 0 595.29 841.89 C
488.96 458.6 521.99 477.05 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(P) 489.96 467.05 T
0 9 Q
(1) 497.74 462.85 T
2 12 Q
(t) 510.1 467.05 T
3 F
(\050) 504.96 467.05 T
(\051) 513.99 467.05 T
-0.01 0 595.29 841.89 C
128.23 437.6 161.26 456.05 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(P) 129.23 446.05 T
0 9 Q
(2) 137.01 441.85 T
2 12 Q
(t) 149.37 446.05 T
3 F
(\050) 144.23 446.05 T
(\051) 153.26 446.05 T
-0.01 0 595.29 841.89 C
281.03 395.6 312.73 419 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 282.03 404.05 T
2 9 Q
(e) 288.49 399.85 T
0 F
(2) 288.49 411.25 T
2 12 Q
(t) 300.84 404.05 T
3 F
(\050) 295.7 404.05 T
(\051) 304.73 404.05 T
-0.01 0 595.29 841.89 C
383.18 399.05 412.58 414.05 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 384.18 404.05 T
(t) 400.7 404.05 T
3 F
(\050) 395.55 404.05 T
(\051) 404.59 404.05 T
-0.01 0 595.29 841.89 C
224.74 317.46 393.58 360.05 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(P) 228.07 348.7 T
0 9 Q
(1) 235.85 344.5 T
2 12 Q
(t) 248.21 348.7 T
3 F
(\050) 243.06 348.7 T
(\051) 252.1 348.7 T
1 F
(p) 276.86 348.7 T
0 9 Q
(1) 283.99 344.5 T
(0) 288.49 344.5 T
1 12 Q
(u) 305.75 348.7 T
0 9 Q
(1) 312.88 344.5 T
(1) 317.38 344.5 T
2 12 Q
(t) 322.59 348.7 T
3 F
(\274) 338.69 348.7 T
1 F
(u) 363.45 348.7 T
0 9 Q
(1) 370.58 344.5 T
2 F
(n) 375.61 344.5 T
2 12 Q
(t) 380.82 348.7 T
2 9 Q
(n) 384.75 352.3 T
0 12 Q
(+) 295.99 348.7 T
(+) 328.92 348.7 T
(+) 353.69 348.7 T
(=) 264.1 348.7 T
2 F
(P) 228.07 325.91 T
0 9 Q
(2) 235.85 321.71 T
2 12 Q
(t) 248.21 325.91 T
3 F
(\050) 243.06 325.91 T
(\051) 252.1 325.91 T
1 F
(p) 276.86 325.91 T
0 9 Q
(2) 283.99 321.71 T
(0) 288.49 321.71 T
1 12 Q
(u) 305.75 325.91 T
0 9 Q
(2) 312.88 321.71 T
(1) 317.38 321.71 T
2 12 Q
(t) 322.59 325.91 T
3 F
(\274) 338.69 325.91 T
1 F
(u) 363.45 325.91 T
0 9 Q
(2) 370.58 321.71 T
2 F
(n) 375.61 321.71 T
2 12 Q
(t) 380.82 325.91 T
2 9 Q
(n) 384.75 329.51 T
0 12 Q
(+) 295.99 325.91 T
(+) 328.92 325.91 T
(+) 353.69 325.91 T
(=) 264.1 325.91 T
-0.01 0 595.29 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 4
%%Page: "5" 5
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(5) 318.61 71.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.28 (Each coef) 122.16 764.27 P
0.28 (\336cient in Eq. \0506\051 is a column vector of the same size \050in the case of three) 169.87 764.27 P
1.1 (dimensional space,) 107.99 743.27 P
1.1 (\051 so the coef) 270.02 743.27 P
1.1 (\336cients can be converted into a matrix) 332.09 743.27 P
(form:) 107.99 722.27 T
0 10 Q
(\0507\051) 510.33 624.97 T
0 12 Q
0.44 (The matrix,) 122.16 540.85 P
0.44 (, is obtained by substituting the functions) 192.38 540.85 P
0.44 ( and) 429.2 540.85 P
0.44 ( for the) 486.45 540.85 P
0.15 (matrices) 107.99 519.85 P
0.15 ( and) 169.75 519.85 P
0.15 (, in Eq. \0504\051. As we are now dealing with matrices, multiplication) 211.34 519.85 P
(of) 107.99 498.85 T
( \050) 133.98 498.85 T
(\051 by it\325) 218.63 498.85 T
(s transpose is required:) 250.63 498.85 T
0 10 Q
(\0508\051) 510.33 460.9 T
0 12 Q
1.98 (The polynomial, representing) 122.16 441.9 P
1.98 (, is then obtained by the summation of the) 304.46 441.9 P
(diagonals from left to right of matrix) 107.99 420.9 T
(.) 297.97 420.9 T
0 10 Q
(\0509\051) 510.33 316.08 T
204.51 734.82 270.02 754.62 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(p) 205.51 743.27 T
2 9 Q
(i) 212.64 739.07 T
0 F
(0) 215.67 739.07 T
1 12 Q
(u) 226.17 743.27 T
2 9 Q
(i) 233.3 739.07 T
(j) 236.33 739.07 T
3 12 Q
(,) 220.17 743.27 T
(\302) 253.38 743.27 T
0 9 Q
(3) 263.52 746.87 T
3 12 Q
(\316) 241.83 743.27 T
-0.01 0 595.29 841.89 C
244.34 554.85 373.98 699.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(t) 253.57 682.41 T
0 F
(1) 281.66 677.12 T
2 F
(t) 292.46 677.12 T
3 F
(\274) 300.59 677.12 T
2 F
(t) 317.39 677.12 T
2 9 Q
(n) 321.18 684.32 T
0 12 Q
(=) 263.56 682.41 T
1 F
(p) 245.93 650.61 T
0 9 Q
(1) 253.06 646.42 T
1 12 Q
(p) 281.66 649.53 T
0 9 Q
(1) 288.79 645.33 T
(0) 293.29 645.33 T
1 12 Q
(u) 302.58 649.53 T
0 9 Q
(1) 309.71 645.33 T
(1) 314.21 645.33 T
3 12 Q
(\274) 323.51 649.53 T
1 F
(u) 340.31 649.53 T
0 9 Q
(1) 347.43 645.33 T
2 F
(n) 352.46 645.33 T
1 12 Q
(t) 361.93 650.61 T
2 9 Q
(T) 366.38 657.81 T
0 12 Q
(=) 263.56 650.61 T
1 F
(M) 276.32 620.74 T
0 9 Q
(1) 288.11 616.54 T
1 12 Q
(t) 293.31 620.74 T
2 9 Q
(T) 297.77 627.94 T
0 12 Q
(=) 263.56 620.74 T
1 F
(p) 245.93 593.18 T
0 9 Q
(2) 253.06 588.98 T
1 12 Q
(p) 281.66 592.1 T
0 9 Q
(2) 288.79 587.9 T
(0) 293.29 587.9 T
1 12 Q
(u) 302.58 592.1 T
0 9 Q
(2) 309.71 587.9 T
(1) 314.21 587.9 T
3 12 Q
(\274) 323.51 592.1 T
1 F
(u) 340.31 592.1 T
0 9 Q
(2) 347.43 587.9 T
2 F
(n) 352.46 587.9 T
1 12 Q
(t) 361.93 593.18 T
2 9 Q
(T) 366.38 600.38 T
0 12 Q
(=) 263.56 593.18 T
1 F
(M) 276.32 563.3 T
0 9 Q
(2) 288.11 559.1 T
1 12 Q
(t) 293.31 563.3 T
2 9 Q
(T) 297.77 570.5 T
0 12 Q
(=) 263.56 563.3 T
282.32 674.12 278.72 674.12 278.72 695.87 3 L
0.54 H
2 Z
N
278.72 695.87 282.32 695.87 2 L
N
323.94 674.12 327.54 674.12 327.54 695.87 3 L
N
327.54 695.87 323.94 695.87 2 L
N
282.32 643.08 278.72 643.08 278.72 663.33 3 L
N
278.72 663.33 282.32 663.33 2 L
N
355.23 643.08 358.82 643.08 358.82 663.33 3 L
N
358.82 663.33 355.23 663.33 2 L
N
282.32 585.65 278.72 585.65 278.72 605.89 3 L
N
278.72 605.89 282.32 605.89 2 L
N
355.23 585.65 358.82 585.65 358.82 605.89 3 L
N
358.82 605.89 355.23 605.89 2 L
N
-0.01 0 595.29 841.89 C
182.04 535.85 192.38 550.85 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(E) 182.71 540.85 T
-0.01 0 595.29 841.89 C
396.16 532.4 429.19 550.85 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(P) 397.16 540.85 T
0 9 Q
(1) 404.95 536.65 T
2 12 Q
(t) 417.31 540.85 T
3 F
(\050) 412.16 540.85 T
(\051) 421.2 540.85 T
-0.01 0 595.29 841.89 C
453.41 532.4 486.44 550.85 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(P) 454.41 540.85 T
0 9 Q
(2) 462.2 536.65 T
2 12 Q
(t) 474.56 540.85 T
3 F
(\050) 469.41 540.85 T
(\051) 478.45 540.85 T
-0.01 0 595.29 841.89 C
151.8 511.4 169.75 529.85 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(M) 152.13 519.85 T
0 9 Q
(1) 163.92 515.65 T
-0.01 0 595.29 841.89 C
193.39 511.4 211.34 529.85 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(M) 193.72 519.85 T
0 9 Q
(2) 205.5 515.65 T
-0.01 0 595.29 841.89 C
120.99 493.85 133.98 508.85 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(M) 121.32 498.85 T
-0.01 0 595.29 841.89 C
140.98 490.4 218.63 508.85 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(M) 141.98 498.85 T
(M) 172.07 498.85 T
0 9 Q
(1) 183.85 494.65 T
1 12 Q
(M) 200.35 498.85 T
0 9 Q
(2) 212.13 494.65 T
0 12 Q
(\320) 191.35 498.85 T
(=) 159.3 498.85 T
-0.01 0 595.29 841.89 C
279.86 455.9 338.45 475.85 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(E) 280.86 460.9 T
(M) 307.63 460.9 T
2 9 Q
(T) 319.42 468.1 T
1 12 Q
(M) 325.13 460.9 T
0 F
(=) 294.87 460.9 T
-0.01 0 595.29 841.89 C
272.76 433.45 304.46 456.85 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 273.76 441.9 T
2 9 Q
(e) 280.22 437.7 T
0 F
(2) 280.22 449.1 T
2 12 Q
(t) 292.58 441.9 T
3 F
(\050) 287.43 441.9 T
(\051) 296.46 441.9 T
-0.01 0 595.29 841.89 C
287.64 415.9 297.97 430.9 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(E) 288.31 420.9 T
-0.01 0 595.29 841.89 C
172.74 238.45 445.58 397.9 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(E) 234.38 351.42 T
2 F
(a) 266.48 380.71 T
0 9 Q
(0) 272.94 376.51 T
(0) 277.44 376.51 T
2 12 Q
(a) 286.74 380.71 T
0 9 Q
(0) 293.19 376.51 T
(1) 297.69 376.51 T
3 12 Q
(\274) 317.71 380.71 T
(\274) 355.96 380.71 T
2 F
(a) 266.48 360.46 T
0 9 Q
(1) 272.94 356.26 T
(0) 277.44 356.26 T
3 12 Q
(\274) 288.46 360.46 T
(\274) 317.71 360.46 T
(\274) 355.96 360.46 T
(\274) 268.21 340.21 T
(\274) 288.46 340.21 T
(\274) 317.71 340.21 T
2 F
(a) 345.23 340.21 T
2 9 Q
(n) 351.69 336.01 T
0 F
(1) 365.18 336.01 T
(\320) 358.44 336.01 T
2 F
(n) 374.18 336.01 T
3 F
(,) 369.68 336.01 T
3 12 Q
(\274) 268.21 319.97 T
(\274) 288.46 319.97 T
2 F
(a) 306.99 319.97 T
2 9 Q
(n) 313.45 315.77 T
(n) 322.44 315.77 T
0 F
(1) 335.94 315.77 T
(\320) 329.19 315.77 T
3 F
(,) 317.95 315.77 T
2 12 Q
(a) 353.96 319.97 T
2 9 Q
(n) 360.42 315.77 T
(n) 365.45 315.77 T
0 12 Q
(=) 248.38 351.42 T
2 F
(d) 173.74 283.39 T
2 9 Q
(e) 180.19 279.19 T
0 F
(2) 180.19 290.59 T
2 12 Q
(t) 192.55 283.39 T
3 F
(\050) 187.4 283.39 T
(\051) 196.44 283.39 T
2 F
(a) 221.2 283.39 T
0 9 Q
(0) 227.65 279.19 T
(0) 232.15 279.19 T
2 12 Q
(a) 256.57 283.39 T
0 9 Q
(0) 263.02 279.19 T
(1) 267.52 279.19 T
2 12 Q
(a) 284.79 283.39 T
0 9 Q
(1) 291.24 279.19 T
(0) 295.74 279.19 T
0 12 Q
(+) 275.02 283.39 T
3 F
(\050) 251.42 283.39 T
(\051) 300.8 283.39 T
2 F
(t) 307.5 283.39 T
3 F
(\274) 323.6 283.39 T
2 F
(a) 373.82 283.39 T
2 9 Q
(i) 380.27 279.19 T
(n) 387.27 279.19 T
(i) 400.77 279.19 T
0 F
(\320) 394.02 279.19 T
3 F
(,) 382.78 279.19 T
2 F
(i) 355.52 267.9 T
0 F
(0) 368.12 267.9 T
(=) 358.55 267.9 T
2 F
(n) 361.82 298.97 T
3 18 Q
(\345) 357.65 280.19 T
3 12 Q
(\350) 348.37 273.55 T
(\370) 403.82 273.55 T
(\347) 348.37 283.84 T
(\367) 403.82 283.84 T
(\346) 348.37 294.13 T
(\366) 403.82 294.13 T
2 F
(t) 410.53 283.39 T
2 9 Q
(n) 414.32 290.59 T
3 12 Q
(\274) 431.58 283.39 T
0 F
(+) 239.65 283.39 T
(+) 313.84 283.39 T
(+) 338.6 283.39 T
(+) 421.82 283.39 T
(=) 208.43 283.39 T
3 F
(\274) 214.45 246.9 T
2 F
(a) 246.36 246.9 T
2 9 Q
(n) 252.82 242.7 T
0 F
(1) 266.31 242.7 T
(\320) 259.56 242.7 T
2 F
(n) 275.31 242.7 T
3 F
(,) 270.81 242.7 T
2 12 Q
(a) 292.57 246.9 T
2 9 Q
(n) 299.03 242.7 T
(n) 308.02 242.7 T
0 F
(1) 321.52 242.7 T
(\320) 314.77 242.7 T
3 F
(,) 303.53 242.7 T
0 12 Q
(+) 282.81 246.9 T
3 F
(\050) 241.21 246.9 T
(\051) 326.57 246.9 T
2 F
(t) 333.28 246.9 T
0 9 Q
(2) 337.07 254.1 T
2 F
(n) 342.1 254.1 T
0 F
(1) 355.59 254.1 T
(\320) 348.85 254.1 T
2 12 Q
(a) 372.86 246.9 T
2 9 Q
(n) 379.31 242.7 T
(n) 384.34 242.7 T
2 12 Q
(t) 389.55 246.9 T
0 9 Q
(2) 393.34 254.1 T
2 F
(n) 398.37 254.1 T
0 12 Q
(+) 229.45 246.9 T
(+) 363.09 246.9 T
267.14 313.52 263.55 313.52 263.55 394.51 3 L
0.54 H
2 Z
N
263.55 394.51 267.14 394.51 2 L
N
376.94 313.52 380.54 313.52 380.54 394.51 3 L
N
380.54 394.51 376.94 394.51 2 L
N
-0.01 0 595.29 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(6) 318.61 71.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.4 (Finally) 122.16 764.27 P
0.4 ( can be obtained by subtracting the square of) 188.98 764.27 P
0.4 ( i.e.) 417.86 764.27 P
0.4 ( in) 509.26 764.27 P
(Eq. \0509\051 to give:) 107.99 743.27 T
0 10 Q
(\05010\051) 505.33 662.2 T
0 12 Q
0.75 (Each diagonal of) 122.16 594.12 P
0.75 ( represents a coef) 219.06 594.12 P
0.75 (\336cient of) 304.72 594.12 P
0.75 ( separated out into it\325) 383.91 594.12 P
0.75 (s bino-) 488.24 594.12 P
0.88 (mial parts. Equation 8 essentially performs the \324squared\325 operation on the dif) 107.99 573.12 P
0.88 (ference) 486.69 573.12 P
0 (between the two paths. Now that we have) 107.99 552.12 P
0 ( as a polynomial, of order) 340.34 552.12 P
0 (, we can) 482.35 552.12 P
1.31 (\336nd a possible collision time. The roots can be obtained using standard polynomial) 107.99 531.12 P
1.98 (root \336nding techniques [Press) 107.99 510.12 P
2 F
1.98 (et al) 261.88 510.12 P
0 F
1.98 (. 1992]. The collision time is equivalent to the) 284.86 510.12 P
0.03 (smallest positive real root. If no positive real roots are found, then no collision occurs.) 107.99 489.12 P
1.64 (This method is analogous to the approach by Canny [Canny 1986]. For two linear) 107.99 468.12 P
0.25 (translating and rotating convex polygons he obtains a quintic polynomial, the roots of) 107.99 447.12 P
(which denote possible collisions.) 107.99 426.12 T
-0.12 (Over the temporal interval of sphere intersection a more complex algorithm may be) 122.16 401.12 P
0.84 (applied to the actual objects, or some more detailed approximation. Since the search) 107.99 380.12 P
0.74 (space over this interval will be small compared to the overall interval we may \336nd a) 107.99 359.12 P
1.16 (more accurate solution, for example an algorithm for predicting a collision between) 107.99 338.12 P
(two translating and rotating convex polygons.) 107.99 317.12 T
1 16 Q
(3   Pr) 107.99 269.46 T
(ediction between a moving spher) 144.58 269.46 T
(e and static object) 367.4 269.46 T
0 12 Q
0.67 (W) 107.99 246.12 P
0.67 (e may generalise the solution, presented in Section 2 for static objects, where such) 118.36 246.12 P
0.21 (objects are considered to be convex polygons that contain three types of feature: face,) 107.99 225.12 P
0.31 (edge and vertex. V) 107.99 204.12 P
0.31 (oronoi regions are generated for each feature, consisting of a set of) 198.01 204.12 P
0.47 (surrounding V) 107.99 183.12 P
0.47 (oronoi planes, see Figure) 176.57 183.12 P
0.47 (3. A V) 301.63 183.12 P
0.47 (oronoi region associated with a feature) 333.35 183.12 P
1 (is a set of points closer to that feature than to any others [Preparata) 107.99 162.12 P
2 F
1 (et al) 445.31 162.12 P
0 F
1 (. 1985, Lin) 467.31 162.12 P
2.11 (1993, Cohen) 107.99 141.12 P
2 F
2.11 (et al) 176.54 141.12 P
0 F
2.11 (. 1995]. The regions partition the exterior space of the polygon) 199.64 141.12 P
0.16 (according to the closest feature. Thus the closest feature between an outside point and) 107.99 120.12 P
-0.01 (the polygon is de\336ned by the V) 107.99 99.12 P
-0.01 (oronoi region the point resides in. This important prop-) 257.06 99.12 P
159.57 759.27 188.98 774.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 160.57 764.27 T
(t) 177.09 764.27 T
3 F
(\050) 171.95 764.27 T
(\051) 180.98 764.27 T
-0.01 0 595.29 841.89 C
410.19 759.27 417.86 774.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(r) 411.19 764.27 T
-0.01 0 595.29 841.89 C
439.32 755.82 509.25 775.62 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(b) 440.32 764.27 T
0 9 Q
(0) 446.77 760.07 T
2 12 Q
(a) 470.03 764.27 T
0 9 Q
(0) 476.49 760.07 T
(0) 480.99 760.07 T
2 12 Q
(r) 497.49 764.27 T
0 9 Q
(2) 502.76 767.87 T
0 12 Q
(\320) 488.49 764.27 T
(=) 457.27 764.27 T
-0.01 0 595.29 841.89 C
165.82 608.12 447.5 720.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 166.82 705.32 T
(t) 183.34 705.32 T
3 F
(\050) 178.19 705.32 T
(\051) 187.23 705.32 T
2 F
(b) 211.99 705.32 T
0 9 Q
(0) 218.44 701.12 T
2 12 Q
(b) 235.71 705.32 T
0 9 Q
(1) 242.16 701.12 T
2 12 Q
(t) 247.37 705.32 T
3 F
(\274) 263.47 705.32 T
2 F
(b) 288.24 705.32 T
2 9 Q
(n) 294.69 701.12 T
2 12 Q
(t) 299.9 705.32 T
2 9 Q
(n) 303.69 712.52 T
3 12 Q
(\274) 320.95 705.32 T
2 F
(b) 345.72 705.32 T
0 9 Q
(2) 352.18 701.12 T
2 F
(n) 357.21 701.12 T
0 F
(1) 370.7 701.12 T
(\320) 363.95 701.12 T
2 12 Q
(t) 375.91 705.32 T
0 9 Q
(2) 379.7 712.52 T
2 F
(n) 384.73 712.52 T
0 F
(1) 398.22 712.52 T
(\320) 391.48 712.52 T
2 12 Q
(b) 415.49 705.32 T
0 9 Q
(2) 421.94 701.12 T
2 F
(n) 426.97 701.12 T
2 12 Q
(t) 432.18 705.32 T
0 9 Q
(2) 435.97 712.52 T
2 F
(n) 441 712.52 T
0 12 Q
(+) 225.94 705.32 T
(+) 253.7 705.32 T
(+) 278.47 705.32 T
(+) 311.19 705.32 T
(+) 335.95 705.32 T
(+) 405.72 705.32 T
(=) 199.22 705.32 T
2 F
(b) 199.22 671.14 T
2 9 Q
(j) 205.68 666.94 T
2 12 Q
(a) 246.21 671.14 T
2 9 Q
(i) 252.66 666.94 T
(j) 259.66 666.94 T
(i) 271.16 666.94 T
0 F
(\320) 264.41 666.94 T
3 F
(,) 255.16 666.94 T
2 F
(i) 226.94 655.65 T
0 F
(0) 240.51 655.65 T
(=) 232.44 655.65 T
2 F
(j) 234.72 686.72 T
3 18 Q
(\345) 229.56 667.94 T
0 12 Q
(=) 214.18 671.14 T
(0) 314.14 671.14 T
2 F
(j) 332.73 671.14 T
(n) 348.65 671.14 T
3 F
(\243) 339.06 671.14 T
(<) 323.14 671.14 T
2 F
(b) 199.22 626.87 T
2 9 Q
(j) 205.68 622.67 T
2 12 Q
(a) 257.7 626.87 T
2 9 Q
(i) 264.16 622.67 T
(j) 271.16 622.67 T
(i) 282.65 622.67 T
0 F
(\320) 275.91 622.67 T
3 F
(,) 266.66 622.67 T
2 F
(i) 226.94 611.37 T
(j) 240.51 611.37 T
(n) 252 611.37 T
0 F
(\320) 245.26 611.37 T
(=) 232.44 611.37 T
2 F
(n) 239.47 642.45 T
3 18 Q
(\345) 235.31 623.67 T
0 12 Q
(=) 214.18 626.87 T
2 F
(n) 315.14 626.87 T
(j) 333.73 626.87 T
0 F
(2) 349.65 626.87 T
2 F
(n) 356.36 626.87 T
3 F
(\243) 340.06 626.87 T
(<) 324.14 626.87 T
-0.01 0 595.29 841.89 C
208.72 589.12 219.06 604.12 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(E) 209.72 594.12 T
-0.01 0 595.29 841.89 C
352.21 585.67 383.91 609.07 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 353.21 594.12 T
2 9 Q
(e) 359.67 589.92 T
0 F
(2) 359.67 601.32 T
2 12 Q
(t) 372.03 594.12 T
3 F
(\050) 366.88 594.12 T
(\051) 375.91 594.12 T
-0.01 0 595.29 841.89 C
310.93 547.12 340.34 562.12 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 311.93 552.12 T
(t) 328.45 552.12 T
3 F
(\050) 323.3 552.12 T
(\051) 332.34 552.12 T
-0.01 0 595.29 841.89 C
466.64 547.12 482.35 562.12 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0 X
0 0 0 1 0 0 0 K
(2) 467.64 552.12 T
2 F
(n) 474.35 552.12 T
-0.01 0 595.29 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(7) 318.61 71.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
2.2 (erty is also true of spheres: the closest feature of a polygon to an outside sphere) 107.99 764.27 P
2.73 (belongs to the region that the centre of the sphere resides. Therefore, prediction) 107.99 743.27 P
3.19 (between a moving sphere and a static polygon involves predicting the traversal) 107.99 722.27 P
(through V) 107.99 701.27 T
(oronoi regions and checking the corresponding features.) 155.44 701.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(3.1  Distance functions between a featur) 107.99 242.36 T
(e and a moving spher) 345.32 242.36 T
(e) 472.63 242.36 T
0 12 Q
0.84 (Each feature requires a unique distance function that is determined by the properties) 107.99 223.69 P
-0.07 (involved. Face, edge and vertex features correspond to three type of geometric shapes,) 107.99 202.69 P
0.04 (planes, lines and points respectively) 107.99 181.69 P
0.04 (. For each shape we obtain a unique description of) 280.35 181.69 P
(, such that, as in the case of two moving spheres:) 137.87 160.69 T
0 10 Q
(\0501) 505.7 122.74 T
(1\051) 513.66 122.74 T
0 12 Q
(with) 107.99 100.29 T
( now de\336ned as being the radius of the single moving sphere.) 139.99 100.29 T
(\050a\051) 312.54 488.54 T
(\050b\051) 186.42 363.69 T
(\050c\051) 312.54 363.69 T
(\050d\051) 437.99 363.69 T
1 10 Q
(FIGURE 3. V) 144.92 342.03 T
(or) 202.61 342.03 T
(onoi r) 211.87 342.03 T
(egions for a box r) 236.97 342.03 T
(epr) 311.23 342.03 T
(esented by thick lines in \050a\051 thr) 325.49 342.03 T
(ough to \050d\051.) 456.98 342.03 T
(Diagram \050a\051 shows a chosen selection of r) 144.92 332.03 T
(egions, r) 320.55 332.03 T
(epr) 356.48 332.03 T
(esented by thin lines. Diagram \050b\051) 370.74 332.03 T
-0.32 (highlights the r) 144.92 322.03 P
-0.32 (egion for a face, \050c\051 for an edge and \050d\051 for a vertex. Each r) 209.11 322.03 P
-0.32 (egion is de\336ned) 454.89 322.03 P
-0.25 (by a set of planes whose normal\325) 144.92 312.03 P
-0.25 (s ar) 281.39 312.03 P
-0.25 (e dir) 296.79 312.03 P
-0.25 (ected into the enclosed space. A r) 316.08 312.03 P
-0.25 (egion for a face) 455.22 312.03 P
(is generated fr) 144.92 302.03 T
(om the lines cr) 206.39 302.03 T
(eating the face. An edge r) 268.7 302.03 T
(egion is cr) 376.83 302.03 T
(eated fr) 419.98 302.03 T
(om the two) 452.84 302.03 T
(connecting faces and the two ends of the edge. The r) 144.92 292.03 T
(egion for a vertex is generated fr) 366.11 292.03 T
(om) 504.78 292.03 T
(the edges connected to the vertex.) 144.92 282.03 T
130.52 500.54 507.87 660.27 C
226.37 502.54 412.03 644.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
252.81 569.63 337.85 569.63 2 L
3 H
1 Z
0 X
0 0 0 1 0 0 0 K
N
252.81 569.63 252.81 527.11 2 L
N
252.81 527.11 337.85 527.11 2 L
N
337.85 569.63 337.85 527.11 2 L
N
252.81 569.63 279.38 596.21 2 L
N
279.38 596.21 364.42 596.21 2 L
N
364.42 596.21 337.85 569.63 2 L
N
364.42 596.21 364.42 553.69 2 L
N
364.42 553.69 337.85 527.11 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
337.85 569.63 380.37 569.63 2 L
0.5 H
2 Z
N
364.42 596.21 406.94 596.21 2 L
N
337.85 527.11 380.37 527.11 2 L
N
364.42 553.69 406.94 553.69 2 L
N
380.37 569.63 380.37 527.11 406.94 553.69 406.94 596.21 4 Y
N
252.81 569.63 252.81 612.15 2 L
N
279.38 596.21 279.38 638.73 2 L
N
364.42 596.21 364.42 638.73 2 L
N
337.85 569.63 337.85 612.15 2 L
N
279.38 638.73 364.42 638.73 337.85 612.15 252.81 612.15 4 Y
N
337.85 527.11 316.59 505.85 2 L
N
252.81 527.11 231.55 505.85 2 L
N
231.55 548.37 316.59 548.37 316.59 505.85 231.55 505.85 4 Y
N
252.81 612.15 231.55 548.37 2 L
N
337.85 612.15 316.59 548.37 2 L
N
337.85 612.15 380.37 569.63 2 L
N
364.42 638.73 406.94 596.21 2 L
N
316.59 548.37 380.37 569.63 2 L
N
316.59 505.85 380.37 527.11 2 L
N
337.85 569.63 316.59 548.37 2 L
N
252.81 569.63 231.55 548.37 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
130.52 500.54 507.87 660.27 C
-0.01 0 595.29 841.89 C
130.52 375.69 256.31 482.54 C
135.06 377.69 251.77 466.54 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
154.05 417.97 205.07 417.97 2 L
3 H
1 Z
0 X
0 0 0 1 0 0 0 K
N
154.05 417.97 154.05 392.46 2 L
N
154.05 392.46 205.07 392.46 2 L
N
205.07 417.97 205.07 392.46 2 L
N
154.05 417.97 170 433.92 2 L
N
170 433.92 221.02 433.92 2 L
N
221.02 433.92 205.07 417.97 2 L
N
221.02 433.92 221.02 408.4 2 L
N
221.02 408.4 205.07 392.46 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
154.05 392.46 141.3 379.7 192.32 379.7 205.07 392.46 4 Y
3 X
V
154.05 417.97 141.3 405.22 141.3 379.7 154.05 392.46 4 Y
V
205.07 417.97 230.59 417.97 2 L
0.5 H
2 Z
0 X
N
221.02 433.92 246.53 433.92 2 L
N
205.07 392.46 230.59 392.46 2 L
N
221.02 408.4 246.53 408.4 2 L
N
230.59 417.97 230.59 392.46 246.53 408.4 246.53 433.92 4 Y
N
154.05 417.97 154.05 443.48 2 L
N
170 433.92 170 459.43 2 L
N
221.02 433.92 221.02 459.43 2 L
N
205.07 417.97 205.07 443.48 2 L
N
170 459.43 221.02 459.43 205.07 443.48 154.05 443.48 4 Y
N
205.07 392.46 192.32 379.7 2 L
1 H
N
141.3 405.22 192.32 405.22 192.32 379.7 141.3 379.7 4 Y
0.5 H
1 Z
N
154.05 443.48 141.3 405.22 2 L
2 Z
N
205.07 443.48 230.59 417.97 2 L
N
221.02 459.43 246.53 433.92 2 L
N
192.32 379.7 230.59 392.46 2 L
1 Z
N
154.05 417.97 141.3 405.22 2 L
1 H
2 Z
N
154.05 392.46 141.3 379.7 2 L
1 Z
N
154.05 417.97 154.05 392.46 2 L
3 H
N
154.05 392.46 205.07 392.46 2 L
N
154.05 417.97 141.3 405.22 2 L
1 H
N
154.05 417.97 141.3 405.22 192.32 405.22 205.07 417.97 4 Y
4 X
V
192.32 405.22 192.32 379.7 205.07 392.46 205.07 417.97 4 Y
V
192.32 405.22 230.59 417.97 2 L
0.5 H
2 Z
0 X
N
205.07 443.48 192.32 405.22 2 L
N
205.07 417.97 192.32 405.22 2 L
1 H
1 Z
N
205.07 392.46 192.32 379.7 2 L
N
154.05 417.97 141.3 405.22 2 L
N
192.32 405.22 192.32 379.7 2 L
0.5 H
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
130.52 375.69 256.31 482.54 C
-0.01 0 595.29 841.89 C
256.31 375.69 382.09 482.54 C
263.31 377.69 375.09 466.54 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
295.91 434.97 295.91 460.48 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
279.96 419.03 330.98 419.03 2 L
3 H
1 Z
N
279.96 419.03 279.96 393.52 2 L
N
279.96 393.52 330.98 393.52 2 L
N
330.98 419.03 330.98 393.52 2 L
N
279.96 419.03 295.91 434.97 2 L
N
295.91 434.97 346.93 434.97 2 L
N
346.93 434.97 330.98 419.03 2 L
N
346.93 434.97 346.93 409.46 2 L
N
346.93 409.46 330.98 393.52 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
279.96 444.54 330.98 444.54 330.98 419.03 279.96 419.03 4 Y
3 X
V
0.5 H
0 X
N
330.98 419.03 356.49 419.03 2 L
2 Z
N
346.93 434.97 372.44 434.97 2 L
N
330.98 393.52 356.49 393.52 2 L
N
346.93 409.46 372.44 409.46 2 L
N
356.49 419.03 356.49 393.52 372.44 409.46 372.44 434.97 4 Y
N
279.96 419.03 279.96 444.54 2 L
N
346.93 434.97 346.93 460.48 2 L
N
330.98 419.03 330.98 444.54 2 L
N
295.91 460.48 346.93 460.48 330.98 444.54 279.96 444.54 4 Y
N
330.98 393.52 318.23 380.76 2 L
N
267.21 406.27 318.23 406.27 318.23 380.76 267.21 380.76 4 Y
N
279.96 444.54 267.21 406.27 2 L
N
330.98 444.54 318.23 406.27 2 L
N
330.98 444.54 356.49 419.03 2 L
N
346.93 460.48 372.44 434.97 2 L
N
318.23 406.27 356.49 419.03 2 L
N
318.23 380.76 356.49 393.52 2 L
N
330.98 419.03 318.23 406.27 2 L
N
279.96 419.03 267.21 406.27 2 L
N
279.96 393.52 267.21 380.76 2 L
N
279.96 444.54 267.21 406.27 279.96 419.03 3 Y
3 X
V
267.21 406.27 318.23 406.27 330.98 419.03 279.96 419.03 4 Y
V
1 Z
0 X
N
279.96 419.03 330.98 419.03 2 L
3 H
N
330.98 444.54 318.23 406.27 330.98 419.03 3 Y
4 X
V
0.5 H
0 X
N
330.98 419.03 318.23 406.27 2 L
1 H
N
330.98 444.54 330.98 419.03 2 L
N
279.96 419.03 267.21 406.27 2 L
N
279.96 444.54 279.96 419.03 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
256.31 375.69 382.09 482.54 C
-0.01 0 595.29 841.89 C
382.09 375.69 507.87 482.54 C
386.61 377.69 503.35 466.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
405.52 419.31 456.54 419.31 2 L
3 H
1 Z
0 X
0 0 0 1 0 0 0 K
N
405.52 419.31 456.54 419.31 2 L
N
405.52 419.31 405.52 393.8 2 L
N
405.52 393.8 456.54 393.8 2 L
N
456.54 419.31 456.54 393.8 2 L
N
405.52 419.31 421.46 435.25 2 L
N
421.46 435.25 472.48 435.25 2 L
N
472.48 435.25 456.54 419.31 2 L
N
472.48 435.25 472.48 409.74 2 L
N
472.48 409.74 456.54 393.8 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
421.46 435.25 421.46 460.76 2 L
0.5 H
2 Z
N
456.54 419.31 482.05 419.31 2 L
N
472.48 435.25 498 435.25 2 L
N
456.54 393.8 482.05 393.8 2 L
N
472.48 409.74 498 409.74 2 L
N
482.05 419.31 482.05 393.8 498 409.74 498 435.25 4 Y
N
405.52 419.31 405.52 444.82 2 L
N
472.48 435.25 472.48 460.76 2 L
N
456.54 419.31 456.54 444.82 2 L
N
421.46 460.76 472.48 460.76 456.54 444.82 405.52 444.82 4 Y
N
456.54 393.8 443.78 381.04 2 L
N
392.76 406.55 443.78 406.55 443.78 381.04 392.76 381.04 4 Y
N
405.52 444.82 392.76 406.55 2 L
N
456.54 444.82 443.78 406.55 2 L
N
456.54 444.82 482.05 419.31 2 L
N
472.48 460.76 498 435.25 2 L
N
443.78 406.55 482.05 419.31 2 L
N
443.78 381.04 482.05 393.8 2 L
N
456.54 419.31 443.78 406.55 2 L
N
405.52 419.31 392.76 406.55 2 L
N
405.52 393.8 392.76 381.04 2 L
N
456.54 444.82 443.78 406.55 456.54 419.31 3 Y
3 X
V
1 Z
0 X
N
456.54 444.82 482.05 419.31 456.54 419.31 3 Y
3 X
V
0 X
N
456.54 419.31 443.78 406.55 482.05 419.31 3 Y
3 X
V
0 X
N
456.54 419.31 443.78 406.55 2 L
1 H
N
456.54 444.82 456.54 419.31 2 L
N
456.54 419.31 482.05 419.31 2 L
N
90 450 1.59 1.59 456.54 419.31 G
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
382.09 375.69 507.87 482.54 C
-0.01 0 595.29 841.89 C
107.99 152.24 137.87 175.64 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 108.99 160.69 T
2 9 Q
(e) 115.45 156.49 T
0 F
(2) 115.45 167.89 T
2 12 Q
(t) 127.8 160.69 T
3 F
(\050) 122.66 160.69 T
(\051) 131.69 160.69 T
-0.01 0 595.29 841.89 C
257.53 114.29 356.16 137.69 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 258.53 122.74 T
(t) 275.05 122.74 T
3 F
(\050) 269.9 122.74 T
(\051) 278.94 122.74 T
2 F
(d) 303.7 122.74 T
2 9 Q
(e) 310.15 118.54 T
0 F
(2) 310.15 129.94 T
2 12 Q
(t) 322.51 122.74 T
3 F
(\050) 317.36 122.74 T
(\051) 326.4 122.74 T
2 F
(r) 344.39 122.74 T
0 9 Q
(2) 349.66 126.34 T
0 12 Q
(\320) 335.4 122.74 T
(=) 290.93 122.74 T
-0.01 0 595.29 841.89 C
132.33 95.29 139.99 110.29 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(r) 133.33 100.29 T
-0.01 0 595.29 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(8) 318.61 71.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(3.1.1  Distance function with a plane) 107.99 764.27 T
0 F
0.38 (A plane,) 107.99 746.27 P
0.38 (, can be de\336ned using a point) 164.62 746.27 P
0.38 (, which lies on the plane, and a normal to) 320.93 746.27 P
0.17 (the plane,) 107.99 725.27 P
0.17 (. Given a point) 166.99 725.27 P
0.17 (, not on the plane, the perpendicular Euclidean distance,) 251.67 725.27 P
(, of) 121.44 704.27 T
( to the plane) 150.77 704.27 T
( is:) 224.98 704.27 T
0 10 Q
(\05012\051) 505.33 671.27 T
0 12 Q
(Since) 122.16 648.82 T
( and) 162.16 648.82 T
( remain constant over time:) 194.49 648.82 T
0 10 Q
(\05013\051) 505.33 615.82 T
0 12 Q
(and) 107.99 593.37 T
( can be represented as a matrix:) 156.39 593.37 T
0 10 Q
(\05014\051) 505.33 554.26 T
0 12 Q
0.69 (This distance function directly relates to the Euclidean distance between the point) 122.16 528.33 P
0.72 (and plane, and not the square of the Euclidean distance. Eq. \0501) 107.99 507.33 P
0.72 (1\051 is still valid and an) 414.73 507.33 P
-0.13 (expression for) 107.99 486.33 P
-0.13 ( may be obtained from) 208.93 486.33 P
-0.13 (. However we may obtain an equiv-) 351.13 486.33 P
0.46 (alent result using the more elementary expression for the Euclidean distance between) 107.99 465.33 P
(the plane and the surface of the sphere:) 107.99 444.33 T
0 10 Q
(\05015\051) 505.33 411.33 T
0 12 Q
(This distance function is of the order) 122.16 388.88 T
(: the same order as the path of movement.) 310.8 388.88 T
1 F
(3.1.2  Distance function with a line) 107.99 349.88 T
0 F
0.2 (A line,) 107.99 331.88 P
0.2 (, can be de\336ned in a similar way to a plane. It requires a point) 154.38 331.88 P
0.2 (, which lies) 466.6 331.88 P
-0.22 (on the line and a direction vector) 107.99 310.88 P
-0.22 (,) 264.14 310.88 P
-0.22 (. The perpendicular distance,) 277.59 310.88 P
-0.22 (, from a point) 432.11 310.88 P
-0.22 ( to) 509.88 310.88 P
0.85 (the line) 107.99 289.88 P
0.85 (, needs to be obtained. However this cannot be achieved directly as in the) 158.68 289.88 P
0.6 (previous section. Firstly the point) 107.99 268.88 P
0.6 ( is required, that lies on the line) 284.69 268.88 P
0.6 (, such that the) 453.52 268.88 P
(line) 107.99 247.88 T
( is perpendicular to) 148.69 247.88 T
(:) 253.68 247.88 T
0 10 Q
(\05016\051) 505.33 206.29 T
0 12 Q
(Now that we have) 107.99 177.88 T
(,) 207.64 177.88 T
( can be obtained:) 227.59 177.88 T
0 10 Q
(\05017\051) 505.33 139.93 T
152.41 741.27 164.62 756.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
(P) 153.41 746.27 T
-0.01 0 595.29 841.89 C
310.6 741.27 320.93 756.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(x) 312.26 746.27 T
-0.01 0 595.29 841.89 C
157.99 720.27 166.99 735.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 158.65 725.27 T
-0.01 0 595.29 841.89 C
242 720.27 251.67 735.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(p) 243 725.27 T
-0.01 0 595.29 841.89 C
107.99 695.82 121.44 714.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 108.99 704.27 T
2 9 Q
(e) 115.45 700.07 T
-0.01 0 595.29 841.89 C
140.44 699.27 150.77 714.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(p) 141.77 704.27 T
-0.01 0 595.29 841.89 C
212.76 699.27 224.98 714.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
(P) 213.76 704.27 T
-0.01 0 595.29 841.89 C
263.88 662.82 349.44 681.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 264.53 671.27 T
2 9 Q
(e) 270.99 667.07 T
1 12 Q
(p) 300.9 671.27 T
(x) 319.57 671.27 T
0 F
(\320) 310.57 671.27 T
3 F
(\050) 295.75 671.27 T
(\051) 326.12 671.27 T
1 F
(n) 341.11 671.27 T
3 F
(\327) 335.11 671.27 T
0 F
(=) 280.98 671.27 T
-0.01 0 595.29 841.89 C
151.83 643.82 162.16 658.82 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(x) 153.49 648.82 T
-0.01 0 595.29 841.89 C
185.49 643.82 194.49 658.82 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 186.15 648.82 T
-0.01 0 595.29 841.89 C
246.13 607.37 367.19 625.82 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 246.46 615.82 T
2 9 Q
(e) 252.91 611.62 T
2 12 Q
(t) 264.77 615.82 T
3 F
(\050) 259.62 615.82 T
(\051) 268.66 615.82 T
2 F
(P) 300.57 615.82 T
(t) 315.76 615.82 T
3 F
(\050) 310.61 615.82 T
(\051) 319.64 615.82 T
1 F
(x) 337.64 615.82 T
0 F
(\320) 328.64 615.82 T
3 F
(\050) 295.42 615.82 T
(\051) 344.19 615.82 T
1 F
(n) 359.19 615.82 T
3 F
(\327) 353.19 615.82 T
0 F
(=) 280.65 615.82 T
-0.01 0 595.29 841.89 C
128.32 588.37 156.39 603.37 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(P) 129.32 593.37 T
(t) 144.51 593.37 T
3 F
(\050) 139.36 593.37 T
(\051) 148.4 593.37 T
-0.01 0 595.29 841.89 C
200.77 542.33 412.55 570.37 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 204.76 554.26 T
2 9 Q
(e) 211.21 550.06 T
2 12 Q
(t) 223.07 554.26 T
3 F
(\050) 217.92 554.26 T
(\051) 226.95 554.26 T
1 F
(n) 258.86 554.26 T
2 9 Q
(T) 265.99 561.46 T
1 12 Q
(p) 292.48 553.17 T
0 9 Q
(0) 299.61 548.98 T
1 12 Q
(x) 316.11 553.17 T
0 F
(\320) 307.11 553.17 T
3 F
(\050) 287.33 553.17 T
(\051) 322.66 553.17 T
1 F
(u) 333.45 553.17 T
0 9 Q
(1) 340.58 548.98 T
3 12 Q
(\274) 349.88 553.17 T
1 F
(u) 366.67 553.17 T
2 9 Q
(n) 373.8 548.98 T
3 12 Q
(\327) 273.99 554.26 T
(\350) 251.71 549.56 T
(\370) 383.11 549.56 T
(\346) 251.71 559.85 T
(\366) 383.11 559.85 T
1 F
(t) 398.11 554.26 T
2 9 Q
(T) 402.56 561.46 T
3 12 Q
(\327) 392.11 554.26 T
0 F
(=) 238.95 554.26 T
285.99 546.73 282.39 546.73 282.39 566.97 3 L
0.54 H
2 Z
N
282.39 566.97 285.99 566.97 2 L
N
376.56 546.73 380.16 546.73 380.16 566.97 3 L
N
380.16 566.97 376.56 566.97 2 L
N
-0.01 0 595.29 841.89 C
179.05 477.88 208.93 501.28 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 180.05 486.33 T
2 9 Q
(e) 186.51 482.13 T
0 F
(2) 186.51 493.53 T
2 12 Q
(t) 198.86 486.33 T
3 F
(\050) 193.72 486.33 T
(\051) 202.75 486.33 T
-0.01 0 595.29 841.89 C
319.94 477.88 351.13 496.33 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 320.94 486.33 T
2 9 Q
(e) 327.39 482.13 T
2 12 Q
(t) 339.25 486.33 T
3 F
(\050) 334.1 486.33 T
(\051) 343.14 486.33 T
-0.01 0 595.29 841.89 C
238.42 402.88 374.9 421.33 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 239.42 411.33 T
(t) 255.94 411.33 T
3 F
(\050) 250.8 411.33 T
(\051) 259.83 411.33 T
2 F
(D) 278.42 411.33 T
3 F
(\272) 268.83 411.33 T
2 9 Q
(e) 287.54 407.13 T
2 12 Q
(t) 299.39 411.33 T
3 F
(\050) 294.24 411.33 T
(\051) 303.28 411.33 T
2 F
(d) 328.04 411.33 T
2 9 Q
(e) 334.49 407.13 T
2 12 Q
(t) 346.35 411.33 T
3 F
(\050) 341.2 411.33 T
(\051) 350.23 411.33 T
2 F
(r) 368.23 411.33 T
0 F
(\320) 359.23 411.33 T
(=) 315.27 411.33 T
-0.01 0 595.29 841.89 C
301.8 383.88 310.8 398.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 302.8 388.88 T
-0.01 0 595.29 841.89 C
144.05 326.88 154.38 341.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(L) 145.38 331.88 T
-0.01 0 595.29 841.89 C
456.27 326.88 466.6 341.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(x) 457.93 331.88 T
-0.01 0 595.29 841.89 C
269.92 305.88 277.59 320.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(s) 270.92 310.88 T
-0.01 0 595.29 841.89 C
418.65 302.43 432.11 320.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 419.65 310.88 T
2 9 Q
(e) 426.11 306.68 T
-0.01 0 595.29 841.89 C
499.54 305.88 509.88 320.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(p) 500.87 310.88 T
-0.01 0 595.29 841.89 C
148.35 284.88 158.68 299.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(L) 149.68 289.88 T
-0.01 0 595.29 841.89 C
275.02 263.88 284.69 278.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(q) 276.02 268.88 T
-0.01 0 595.29 841.89 C
443.84 263.88 453.52 278.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(L) 444.84 268.88 T
-0.01 0 595.29 841.89 C
128.99 242.88 148.69 264.41 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(P) 129.99 247.88 T
(Q) 138.03 247.88 T
131.19 260.42 145.49 260.42 2 L
0.54 H
2 Z
N
143.1 262.81 145.49 260.42 143.1 258.02 3 L
N
-0.01 0 595.29 841.89 C
244.01 242.88 253.68 257.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(L) 245.01 247.88 T
-0.01 0 595.29 841.89 C
265.44 191.88 347.88 224.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
(a) 266.98 214.88 T
1 F
(p) 300.46 214.88 T
(x) 319.13 214.88 T
0 F
(\320) 310.13 214.88 T
3 F
(\050) 295.31 214.88 T
(\051) 325.68 214.88 T
1 F
(s) 340.68 214.88 T
3 F
(\327) 334.68 214.88 T
0 F
(=) 280.55 214.88 T
1 F
(q) 267.88 196.88 T
(x) 293.31 196.88 T
3 F
(a) 312.07 196.88 T
1 F
(s) 320.35 196.88 T
0 F
(+) 302.31 196.88 T
(=) 280.55 196.88 T
-0.01 0 595.29 841.89 C
197.97 172.88 207.64 187.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(q) 198.97 177.88 T
-0.01 0 595.29 841.89 C
213.64 169.43 227.59 192.83 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 214.64 177.88 T
2 9 Q
(e) 221.09 173.68 T
0 F
(2) 221.09 185.08 T
-0.01 0 595.29 841.89 C
244.11 131.48 369.21 154.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 247.76 139.93 T
2 9 Q
(e) 254.22 135.73 T
0 F
(2) 254.22 147.13 T
1 12 Q
(p) 284.63 139.93 T
(q) 303.3 139.93 T
0 F
(\320) 294.3 139.93 T
3 F
(\050) 279.48 139.93 T
(\051) 310.52 139.93 T
1 F
(p) 332.67 139.93 T
(q) 351.34 139.93 T
0 F
(\320) 342.34 139.93 T
3 F
(\050) 327.52 139.93 T
(\051) 358.56 139.93 T
(\327) 319.52 139.93 T
0 F
(=) 264.71 139.93 T
-0.01 0 595.29 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 8
%%Page: "9" 9
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(9) 318.61 71.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(so we can now create functions of time:) 107.99 764.27 T
0 10 Q
(\05018\051) 505.33 709.48 T
0 12 Q
-0.22 (Given that) 122.16 667.88 P
-0.22 ( is a polynomial,) 203.12 667.88 P
-0.22 ( is a polynomial containing real coef) 313.56 667.88 P
-0.22 (\336cients) 487.32 667.88 P
1.9 (representing the Euclidean distance from the point) 107.99 646.88 P
1.9 ( to) 374.59 646.88 P
1.9 (.) 405.4 646.88 P
1.9 (, generated from) 439.21 646.88 P
0.39 (, is a polynomial with column vectors as coef) 133.13 625.88 P
0.39 (\336cients and is of the same order as) 353.65 625.88 P
(. Since) 132.57 604.88 T
( is of the same format as Eq. \0504\051, it can be obtained from Eqs \0507-9\051.) 199.93 604.88 T
1 F
(3.1.3  Distance function with a point) 107.99 565.88 T
0 F
-0.09 (Generating a distance function with a point is almost identical to the procedure in Sec-) 107.99 547.88 P
(tion 2, where one sphere has zero radius. For a point) 107.99 526.88 T
( and the function) 372.6 526.88 T
(:) 481.1 526.88 T
0 10 Q
(\05019\051) 505.33 488.93 T
0 12 Q
(Therefore obtaining) 107.99 466.48 T
( is straight-forward.) 236.04 466.48 T
1 14 Q
(3.2  T) 107.99 426.15 T
(raversal thr) 140.79 426.15 T
(ough r) 211.69 426.15 T
(egions) 250.72 426.15 T
0 12 Q
-0.21 (The V) 107.99 407.48 P
-0.21 (oronoi regions are de\336ned such that each V) 136.55 407.48 P
-0.21 (oronoi plane member has a link to it\325) 341.81 407.48 P
-0.21 (s) 517.32 407.48 P
2.16 (adjacent V) 107.99 386.48 P
2.16 (oronoi region. Hence the V) 160.25 386.48 P
2.16 (oronoi planes for a face link to the V) 298.3 386.48 P
2.16 (oronoi) 490.66 386.48 P
(regions of the surrounding edges.) 107.99 365.48 T
-0.2 (Initially) 122.16 340.48 P
-0.2 (, the region in which the centre of the sphere resides is required, this being a) 159.39 340.48 P
1.64 (simple and fast operation [Lin 1993]. W) 107.99 319.48 P
1.64 (e now perform two prediction checks, one) 309.85 319.48 P
0.31 (involving the path and the V) 107.99 298.48 P
0.31 (oronoi planes and the other involving the sphere and cor-) 244.96 298.48 P
0.15 (responding feature\325) 107.99 277.48 P
0.15 (s shape. The \336rst check requires a dif) 201.12 277.48 P
0.15 (ferent distance function since) 380.57 277.48 P
0.4 (we are only interested in the centre of the sphere, so) 107.99 256.48 P
0.4 ( i.e. the dis-) 464.47 256.48 P
(tance function for a plane.) 107.99 235.48 T
0.31 (T) 122.16 210.48 P
0.31 (wo times are obtained from the checks) 128.65 210.48 P
0.31 ( and) 334.91 210.48 P
0.31 (. The former represents the \336rst) 369.15 210.48 P
0.33 (time the centre of the sphere hits a V) 107.99 189.48 P
0.33 (oronoi plane, while the later denotes the time for) 285.71 189.48 P
0.48 (the sphere to hit the object\325) 107.99 168.48 P
0.48 (s features shape. If there are) 240.7 168.48 P
0.48 ( V) 390.17 168.48 P
0.48 (oronoi planes in a region) 400.76 168.48 P
0.6 (and the time to hit plane) 107.99 147.48 P
0.6 ( is denoted by) 237.24 147.48 P
0.6 ( then) 325.44 147.48 P
0.6 (. If) 507.4 147.48 P
1.34 (no collision occurs with a V) 107.99 126.48 P
1.34 (oronoi plane then) 248.15 126.48 P
1.34 ( and likewise if no collision) 382.27 126.48 P
(occurs with the shape,) 107.99 105.48 T
199.75 681.88 413.57 741.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
(a) 204.13 731.27 T
2 F
(t) 219.56 731.27 T
3 F
(\050) 214.41 731.27 T
(\051) 223.45 731.27 T
2 F
(P) 255.36 731.27 T
(t) 270.55 731.27 T
3 F
(\050) 265.4 731.27 T
(\051) 274.44 731.27 T
1 F
(x) 292.43 731.27 T
0 F
(\320) 283.43 731.27 T
3 F
(\050) 250.21 731.27 T
(\051) 298.98 731.27 T
1 F
(s) 313.98 731.27 T
3 F
(\327) 307.98 731.27 T
0 F
(=) 235.45 731.27 T
2 F
(Q) 203.04 713.27 T
(t) 219.56 713.27 T
3 F
(\050) 214.41 713.27 T
(\051) 223.45 713.27 T
1 F
(x) 248.21 713.27 T
3 F
(a) 266.97 713.27 T
2 F
(t) 282.4 713.27 T
3 F
(\050) 277.26 713.27 T
(\051) 286.29 713.27 T
1 F
(s) 293 713.27 T
0 F
(+) 257.21 713.27 T
(=) 235.45 713.27 T
2 F
(d) 200.75 690.33 T
2 9 Q
(e) 207.2 686.13 T
0 F
(2) 207.2 697.53 T
2 12 Q
(t) 219.56 690.33 T
3 F
(\050) 214.41 690.33 T
(\051) 223.45 690.33 T
2 F
(P) 255.36 690.33 T
(t) 270.55 690.33 T
3 F
(\050) 265.4 690.33 T
(\051) 274.44 690.33 T
2 F
(Q) 292.43 690.33 T
(t) 308.95 690.33 T
3 F
(\050) 303.81 690.33 T
(\051) 312.84 690.33 T
0 F
(\320) 283.43 690.33 T
3 F
(\050) 250.21 690.33 T
(\051) 319.39 690.33 T
2 F
(P) 341.54 690.33 T
(t) 356.73 690.33 T
3 F
(\050) 351.58 690.33 T
(\051) 360.62 690.33 T
2 F
(Q) 378.61 690.33 T
(t) 395.13 690.33 T
3 F
(\050) 389.99 690.33 T
(\051) 399.02 690.33 T
0 F
(\320) 369.61 690.33 T
3 F
(\050) 336.39 690.33 T
(\051) 405.57 690.33 T
(\327) 328.39 690.33 T
0 F
(=) 235.45 690.33 T
-0.01 0 595.29 841.89 C
175.05 662.88 203.13 677.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(P) 176.05 667.88 T
(t) 191.24 667.88 T
3 F
(\050) 186.09 667.88 T
(\051) 195.13 667.88 T
-0.01 0 595.29 841.89 C
285.24 662.88 313.56 677.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
(a) 286.24 667.88 T
2 F
(t) 301.67 667.88 T
3 F
(\050) 296.52 667.88 T
(\051) 305.56 667.88 T
-0.01 0 595.29 841.89 C
366.27 641.88 374.59 656.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(x) 366.93 646.88 T
-0.01 0 595.29 841.89 C
393.74 641.88 405.4 656.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(Q) 394.74 646.88 T
-0.01 0 595.29 841.89 C
413.3 641.88 439.21 656.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(Q) 414.3 646.88 T
(t) 430.83 646.88 T
3 F
(\050) 425.68 646.88 T
(\051) 434.71 646.88 T
-0.01 0 595.29 841.89 C
107.99 620.88 133.14 635.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
(a) 108.99 625.88 T
2 F
(t) 124.42 625.88 T
3 F
(\050) 119.27 625.88 T
(\051) 128.31 625.88 T
-0.01 0 595.29 841.89 C
107.99 599.88 132.57 614.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(P) 108.99 604.88 T
(t) 124.18 604.88 T
3 F
(\050) 119.03 604.88 T
(\051) 128.07 604.88 T
-0.01 0 595.29 841.89 C
168.23 596.43 199.93 619.83 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 169.23 604.88 T
2 9 Q
(e) 175.69 600.68 T
0 F
(2) 175.69 612.08 T
2 12 Q
(t) 188.04 604.88 T
3 F
(\050) 182.9 604.88 T
(\051) 191.93 604.88 T
-0.01 0 595.29 841.89 C
362.27 521.88 372.6 536.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(x) 363.94 526.88 T
-0.01 0 595.29 841.89 C
456.59 521.88 481.09 536.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(P) 457.59 526.88 T
(t) 472.78 526.88 T
3 F
(\050) 467.63 526.88 T
(\051) 476.67 526.88 T
-0.01 0 595.29 841.89 C
229.7 480.48 383.62 503.88 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(d) 230.03 488.93 T
2 9 Q
(e) 236.48 484.73 T
0 F
(2) 236.48 496.13 T
2 12 Q
(P) 266.9 488.93 T
(t) 282.09 488.93 T
3 F
(\050) 276.94 488.93 T
(\051) 285.97 488.93 T
1 F
(x) 303.97 488.93 T
0 F
(\320) 294.97 488.93 T
3 F
(\050) 261.75 488.93 T
(\051) 310.52 488.93 T
2 F
(P) 332.67 488.93 T
(t) 347.86 488.93 T
3 F
(\050) 342.71 488.93 T
(\051) 351.74 488.93 T
1 F
(x) 369.74 488.93 T
0 F
(\320) 360.74 488.93 T
3 F
(\050) 327.52 488.93 T
(\051) 376.29 488.93 T
(\327) 319.52 488.93 T
0 F
(=) 246.98 488.93 T
-0.01 0 595.29 841.89 C
206.63 461.48 236.04 476.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 207.63 466.48 T
(t) 224.15 466.48 T
3 F
(\050) 219.01 466.48 T
(\051) 228.04 466.48 T
-0.01 0 595.29 841.89 C
364.97 247.13 464.47 266.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 365.97 256.48 T
(t) 382.5 256.48 T
3 F
(\050) 377.35 256.48 T
(\051) 386.38 256.48 T
2 F
(d) 411.14 256.48 T
2 9 Q
(e) 417.6 252.28 T
0 F
(p) 425.23 252.28 T
(l) 429.73 252.28 T
(a) 432.23 252.28 T
(n) 436.23 252.28 T
(e) 440.73 252.28 T
2 12 Q
(t) 452.58 256.48 T
3 F
(\050) 447.43 256.48 T
(\051) 456.47 256.48 T
0 F
(=) 398.38 256.48 T
423.39 250.03 423.39 258.13 2 L
0.41 H
2 Z
N
-0.01 0 595.29 841.89 C
319.11 202.03 334.91 220.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(t) 320.11 210.48 T
0 9 Q
(v) 323.91 206.28 T
(p) 328.41 206.28 T
-0.01 0 595.29 841.89 C
358.85 202.03 369.15 220.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(t) 359.85 210.48 T
2 9 Q
(s) 363.64 206.28 T
-0.01 0 595.29 841.89 C
381.17 163.48 390.17 178.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 382.17 168.48 T
-0.01 0 595.29 841.89 C
230.9 142.48 237.24 157.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(i) 231.9 147.48 T
-0.01 0 595.29 841.89 C
309.62 139.03 325.44 162.43 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(t) 310.62 147.48 T
2 9 Q
(v) 314.41 143.28 T
(p) 318.94 143.28 T
(i) 314.41 154.68 T
-0.01 0 595.29 841.89 C
353.29 139.03 507.4 162.43 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(t) 354.29 147.48 T
2 9 Q
(v) 358.08 143.28 T
(p) 362.61 143.28 T
0 12 Q
(m) 385.87 147.48 T
(i) 395.21 147.48 T
(n) 398.55 147.48 T
2 F
(t) 412.4 147.48 T
2 9 Q
(v) 416.2 143.28 T
(p) 420.72 143.28 T
0 F
(1) 416.2 154.68 T
3 12 Q
(\274) 431.22 147.48 T
2 F
(t) 449.22 147.48 T
2 9 Q
(v) 453.01 143.28 T
(p) 457.54 143.28 T
(i) 453.01 154.68 T
3 12 Q
(\274) 468.03 147.48 T
2 F
(t) 486.03 147.48 T
2 9 Q
(v) 489.82 143.28 T
(p) 494.35 143.28 T
(n) 489.82 154.68 T
3 12 Q
(,) 425.22 147.48 T
(,) 443.22 147.48 T
(,) 462.04 147.48 T
(,) 480.03 147.48 T
(\350) 405.25 143.94 T
(\370) 499.4 143.94 T
(\346) 405.25 154.23 T
(\366) 499.4 154.23 T
0 F
(=) 373.11 147.48 T
-0.01 0 595.29 841.89 C
339.17 118.03 382.27 136.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(t) 340.17 126.48 T
0 9 Q
(v) 343.96 122.28 T
(p) 348.46 122.28 T
3 12 Q
(\245) 371.72 126.48 T
0 F
(=) 358.95 126.48 T
-0.01 0 595.29 841.89 C
217.63 97.03 255.24 115.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(t) 218.63 105.48 T
2 9 Q
(s) 222.43 101.28 T
3 12 Q
(\245) 244.69 105.48 T
0 F
(=) 231.92 105.48 T
-0.01 0 595.29 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 9
%%Page: "10" 10
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(10) 316.61 71.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.08 (A collision with the feature occurs if) 122.16 764.27 P
0.08 (, implying the sphere has hit the shape) 337.42 764.27 P
0.27 (before the centre of the sphere has moved to another region. If) 107.99 743.27 P
0.27 (, it implies that) 449.17 743.27 P
1.08 (the centre of the sphere has hit a V) 107.99 722.27 P
1.08 (oronoi plane before the sphere has hit the shape,) 281.72 722.27 P
3.4 (therefore traversal through to the V) 107.99 701.27 P
3.4 (oronoi plane\325) 293.05 701.27 P
3.4 (s adjacent region is performed.) 360.11 701.27 P
1.76 (T) 107.99 680.27 P
1.76 (raversal through regions will continue until a collision between a feature and the) 114.9 680.27 P
(sphere arises or) 107.99 659.27 T
(.) 254.82 659.27 T
0.63 (The prediction of a collision between a static and moving object may be achieved) 122.16 634.27 P
0.45 (by sequentially checking all features of the static convex polygon against the moving) 107.99 613.27 P
0.79 (sphere. However this method is grossly inef) 107.99 592.27 P
0.79 (\336cient as the sphere may never enter the) 323.5 592.27 P
-0.14 (vicinity of some features. A V) 107.99 571.27 P
-0.14 (oronoi diagram generated for a convex polygon, consist-) 251.04 571.27 P
0.56 (ing of V) 107.99 550.27 P
0.56 (oronoi regions reduces feature checking to the regions the path of movement) 147.56 550.27 P
1 (resides. The overhead of checking the V) 107.99 529.27 P
1 (oronoi plane members is small compared to) 306.03 529.27 P
0.93 (checking all features, since a moving object will usually enter a small percentage of) 107.99 508.27 P
0.73 (possible regions. Prediction checking the path against V) 107.99 487.27 P
0.73 (oronoi planes also represents) 380.84 487.27 P
0.83 (the fastest operation; the distance function is of the same order as the path of move-) 107.99 466.27 P
0.19 (ment and is the simplest to obtain. It is not essential that all traversed V) 107.99 445.27 P
0.19 (oronoi regions) 452.14 445.27 P
-0.02 (are checked in one instance. Thus to spread the computation, we may traverse through) 107.99 424.27 P
(to the next region at the time the sphere actually traverses.) 107.99 403.27 T
1 16 Q
(4   Large scale envir) 107.99 355.6 T
(onments) 245.01 355.6 T
0 12 Q
2.91 (Given a lar) 122.16 332.27 P
2.91 (ge scale virtual environment, prediction checking a moving object) 181.09 332.27 P
2.03 (against all other moving and static objects is not feasible, due to a complexity of) 107.99 311.27 P
2.8 (. T) 145.02 290.27 P
2.8 (o reduce the quantity of complex checks we can employ the methods) 160.3 290.27 P
0.34 (applied in frame based collision algorithms [Zyda) 107.99 269.27 P
2 F
0.34 (et al) 352.65 269.27 P
0 F
0.34 (. 1993, Cohen) 373.98 269.27 P
2 F
0.34 (et al) 445.32 269.27 P
0 F
0.34 (. 1995]. An) 466.66 269.27 P
0.75 (axis aligned bounding box may be generated to surround each moving object. Given) 107.99 248.27 P
0.48 (that the path of movement is a parametric polynomial we may \336nd the minimum and) 107.99 227.27 P
2.18 (maximum values for each dimension over a set interval; and from these values a) 107.99 206.27 P
1.46 (bounding box can be created. T) 107.99 185.27 P
1.46 (o take into account the encompassing sphere of the) 265.72 185.27 P
3.14 (moving object, the minimum and maximum values need to be extended by the) 107.99 164.27 P
0.41 (sphere\325) 107.99 143.27 P
0.41 (s radius. If all other moving objects have bounding boxes over the same inter-) 142.65 143.27 P
0.18 (val and static objects have boxes surrounding their shape then, initially) 107.99 122.27 P
0.18 (, bounding box) 449.3 122.27 P
-0.07 (intersection checks are performed on moving/moving and moving/static objects. From) 107.99 101.27 P
301.72 755.82 337.42 774.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(t) 302.72 764.27 T
2 9 Q
(s) 306.51 760.07 T
2 12 Q
(t) 322.6 764.27 T
2 9 Q
(v) 326.39 760.07 T
(p) 330.92 760.07 T
3 12 Q
(\243) 313.01 764.27 T
-0.01 0 595.29 841.89 C
413.47 734.82 449.17 753.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(t) 414.47 743.27 T
2 9 Q
(s) 418.26 739.07 T
2 12 Q
(t) 434.35 743.27 T
2 9 Q
(v) 438.14 739.07 T
(p) 442.67 739.07 T
3 12 Q
(>) 424.76 743.27 T
-0.01 0 595.29 841.89 C
185.63 650.82 254.82 669.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(t) 186.63 659.27 T
2 9 Q
(s) 190.42 655.07 T
2 12 Q
(t) 212.68 659.27 T
2 9 Q
(v) 216.48 655.07 T
(p) 221 655.07 T
3 12 Q
(\245) 244.26 659.27 T
0 F
(=) 199.92 659.27 T
(=) 231.5 659.27 T
-0.01 0 595.29 841.89 C
107.99 284 145.02 305.22 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(O) 108.99 290.27 T
(n) 125.51 290.27 T
0 9 Q
(2) 131.97 297.47 T
3 12 Q
(\350) 118.36 287.82 T
(\370) 137.02 287.82 T
(\346) 118.36 298.11 T
(\366) 137.02 298.11 T
-0.01 0 595.29 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 10
%%Page: "11" 11
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(11) 316.61 71.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
1.04 (these results, prediction checks are performed on objects with intersecting bounding) 107.99 764.27 P
(boxes, see Figure 4. Thus the number of prediction checks are reduced.) 107.99 743.27 T
-0.05 (The paramount limitation of the collision prediction algorithm is that object motion) 122.16 416.4 P
1.43 (requires a path in the future, described as a parametric polynomial. However) 107.99 395.4 P
1.43 (, lar) 490.79 395.4 P
1.43 (ge) 510.66 395.4 P
-0.27 (scale multi user virtual worlds make extensive use of polynomials to approximate non-) 107.99 374.4 P
0.28 (deterministic object motion to \336rst and second order paths; the approximations essen-) 107.99 353.4 P
0.85 (tially give a prediction of what the object is going do, to within a required tolerance) 107.99 332.4 P
0.95 ([Singhal & Cheriton 1995]. W) 107.99 311.4 P
0.95 (e can make use of these approximate paths to give an) 257.17 311.4 P
(indication of when interaction may occur) 107.99 290.4 T
(.) 304.96 290.4 T
0.16 (As stated in the introduction, the NPSNET environment [Macedonia) 122.16 265.4 P
2 F
0.16 (et al) 455.52 265.4 P
0 F
0.16 (. 1994] is) 476.68 265.4 P
0.94 (asynchronous, but each user platform is not synchronised. Problems may then occur) 107.99 244.4 P
-0.08 (when interactions between two fast moving objects arise, for example a missile hitting) 107.99 223.4 P
0.88 (a \336ghter plane. Since they are moving at high speed the relative positional errors on) 107.99 202.4 P
0.33 (platforms will be lar) 107.99 181.4 P
0.33 (ge, being directly dependent on the time delays between commu-) 206.42 181.4 P
1.3 (nication. T) 107.99 160.4 P
1.3 (wo scenarios are possible for collision detection: each user platform per-) 160.44 160.4 P
0.67 (forms detection locally; or platforms are responsible for detecting collisions between) 107.99 139.4 P
-0.11 (objects created locally and remote objects. Given that the \336rst method is implemented,) 107.99 118.4 P
1 10 Q
(FIGURE 4. A world containing one moving object and four static) 215.09 500.73 T
(objects. Each static object is contained within an axis aligned bounding) 215.09 490.73 T
-0.37 (box. The path of the moving object is surr) 215.09 480.73 P
-0.37 (ounded by a box \050dotted lines\051,) 390.57 480.73 P
(de\336ned by a given interval; and this is extended to include the spher) 215.09 470.73 T
(e.) 504.38 470.73 T
(T) 215.09 460.73 T
(esting for intersections r) 220.84 460.73 T
(esults in a possible collision of the moving) 324.25 460.73 T
(object with the static objects on the right. Ther) 215.09 450.73 T
(efor) 414.6 450.73 T
(e a mor) 431.63 450.73 T
(e detailed) 463.66 450.73 T
(pr) 215.09 440.73 T
(ediction check need only be performed on these two objects.) 224.91 440.73 T
200.69 510.4 437.71 702.27 C
207.86 512.4 430.54 696.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
356.68 661.22 342.51 618.7 377.94 597.44 413.37 618.7 399.2 661.22 5 Y
3 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
236.21 653.34 257.47 624.99 307.07 646.25 292.9 681.69 243.29 674.6 5 Y
N
321.25 540.75 349.59 526.57 356.68 562.01 314.16 597.44 4 Y
N
363.77 682.48 M
 321.27 680.16 328.79 621.14 341.87 595.1 D
 343.98 590.89 357.99 586.16 360.99 597.16 D
3 X
N
J
329.33 683.98 366.27 683.98 366.27 589.35 329.33 589.35 4 Y
J
329.33 680.23 329.33 683.98 333.08 683.98 3 L
0.5 H
0 X
N
[6.398 5.545] 6.398 I
333.08 683.98 362.52 683.98 2 L
N
J
362.52 683.98 366.27 683.98 366.27 680.23 3 L
N
[7.22 6.258] 7.22 I
366.27 680.23 366.27 593.1 2 L
N
J
366.27 593.1 366.27 589.35 362.52 589.35 3 L
N
[6.398 5.545] 6.398 I
362.52 589.35 333.08 589.35 2 L
N
J
333.08 589.35 329.33 589.35 329.33 593.1 3 L
N
[7.22 6.258] 7.22 I
329.33 593.1 329.33 680.23 2 L
N
0 1 1 0 1 0 0 K
J
322.25 582.47 371.85 689.89 R
0 1 1 0 1 0 0 K
N
0 0 0 1 0 0 0 K
3 H
0 0 0 1 0 0 0 K
90 450 6.4 6.4 364.28 682.43 A
1 0 1 0 0 1 0 K
311.66 524.66 358.49 600.94 R
0.5 H
1 0 1 0 0 1 0 K
N
340.19 595.69 414.99 663.16 R
N
0 0 0 1 0 0 0 K
234.24 622.91 308.99 683.16 R
0 0 0 1 0 0 0 K
N
221.74 523.66 276.49 529.16 267.24 587.66 217.99 580.91 4 Y
3 H
N
215.99 521.66 278.74 589.66 R
0.5 H
N
200.69 510.4 437.71 702.27 C
-0.01 0 595.29 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 11
%%Page: "12" 12
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(12) 316.61 71.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.61 (each platform will perform detection on objects given their approximate paths. Since) 107.99 764.27 P
-0.3 (each platform will view a moderately dif) 107.99 743.27 P
-0.3 (ferent version of the world the ef) 301.94 743.27 P
-0.3 (fect is that on) 457.89 743.27 P
2.56 (some the missile and plane will collide, whereas on others it won\325) 107.99 722.27 P
2.56 (t. The second) 452.55 722.27 P
2.45 (method will guarantee that if either platform responsible for the plane or missile) 107.99 701.27 P
0.21 (detects the collision then a resulting explosion will occur on all platforms. The conse-) 107.99 680.27 P
-0.1 (quence of the collision will be a broadcast to all other platforms. Due to the time delay) 107.99 659.27 P
1.06 (between the broadcast and the relative positions of the objects \050with respect to plat-) 107.99 638.27 P
1.93 (forms\051 the explosion of each object may occur on other platforms as two discrete) 107.99 617.27 P
(events.) 107.99 596.27 T
-0.09 (If on the other hand the missile and the \336ghter plane collide in a virtual world using) 122.16 571.27 P
0.08 (the real-time architecture it follows that all platforms will see the event when it arises.) 107.99 550.27 P
-0.05 (Assuming the \336rst scenario: all platforms will predict using the approximate paths and) 107.99 529.27 P
0.5 (all will \336nd a possible interaction, and the time it results \050assuming all platforms cal-) 107.99 508.27 P
1.17 (culate to the same accuracy\051. Therefore each will respond in the same way) 107.99 487.27 P
1.17 (, accord-) 478.84 487.27 P
1.27 (ingly) 107.99 466.27 P
1.27 (. Considering the second method the broadcast will still occur) 131.88 466.27 P
1.27 (, however it will) 439.51 466.27 P
1.32 (contain the time the collision occurs, or occurred. T) 107.99 445.27 P
1.32 (o reduce the ef) 365.67 445.27 P
1.32 (fects of the time) 440.38 445.27 P
1.49 (delay) 107.99 424.27 P
1.49 (, due to the broadcast, we may transmit the future event, before it arises. The) 133.2 424.27 P
0 (other platforms may then concentrate collision prediction on the two objects involved,) 107.99 403.27 P
0.38 (as well as their own objects. T) 107.99 382.27 P
0.38 (o further reduce the ef) 255.1 382.27 P
0.38 (fects of time delays the real time) 363.05 382.27 P
0.34 (architecture would incorporate a technique know as time-warping [Sharkey & Kumar) 107.99 361.27 P
-0.12 (1995]. The perceived objects are parameterised by virtual time, such that when a colli-) 107.99 340.27 P
0.48 (sion is broadcast, all remote platforms will receive the collision when their perceived) 107.99 319.27 P
(objects collide.) 107.99 298.27 T
1 16 Q
(5   Conclusion) 107.99 250.6 T
0 12 Q
0.4 (W) 107.99 227.27 P
0.4 (e have shown that predicting collisions of objects in virtual worlds is attainable. T) 118.36 227.27 P
0.4 (o) 515.99 227.27 P
0.93 (reduce complexity) 107.99 206.27 P
0.93 (, it is necessary to encompass moving objects within a sphere and) 197.12 206.27 P
-0.26 (static objects within a convex polygon. If object motion can be described as a paramet-) 107.99 185.27 P
2.5 (ric polynomial, then a polynomial representing the distance between two moving) 107.99 164.27 P
1.01 (objects can be obtained; or the distance between the features of a static and moving) 107.99 143.27 P
-0.22 (object. This distance measure is represented by the function) 107.99 122.27 P
-0.22 (, where the collision) 425.34 122.27 P
-0.21 (time of the objects is encapsulated in the positive real roots of the function. Presuppos-) 107.99 101.27 P
395.93 117.27 425.34 132.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 396.93 122.27 T
(t) 413.45 122.27 T
3 F
(\050) 408.3 122.27 T
(\051) 417.34 122.27 T
-0.01 0 595.29 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 12
%%Page: "13" 13
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(13) 316.61 71.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.11 (ing that the movement of objects are denoted by polynomials of order) 107.99 764.27 P
0.11 (, then the dis-) 456.32 764.27 P
0.08 (tance polynomials are of the order) 107.99 743.27 P
0.08 (. Likewise for the features of a convex polygon,) 291.44 743.27 P
-0.07 (comprising of face, edge and vertices, the distance polynomials are of the order) 107.99 722.27 P
-0.07 (,) 500.35 722.27 P
(and) 107.99 701.27 T
( respectively) 144.02 701.27 T
(.) 204.23 701.27 T
0.6 (The prediction algorithm is already being applied to the case of predicting owner-) 122.16 676.27 P
-0.15 (ship requirements [Roberts) 107.99 655.27 P
2 F
-0.15 (et al) 240.52 655.27 P
0 F
-0.15 (. 1995]. When two users try to pick up the same object) 261.37 655.27 P
0.23 (in a virtual world problems can occur due to the communications delay when sending) 107.99 634.27 P
-0.08 (messages, such that each user ends up with the same object or the virtual world pauses) 107.99 613.27 P
0.74 (until it has resolved the problem. The prediction technique is used to give an indica-) 107.99 592.27 P
0.46 (tion of when a user is going to pick up an object, and thus it can inform others of the) 107.99 571.27 P
(possible ownership requirement.) 107.99 550.27 T
0.32 (Predicting the collision between two translating/rotating convex polygons needs to) 122.16 525.27 P
0.03 (be investigated. Given a reduced interval we consider this aim achievable in real time.) 107.99 504.27 P
1.36 (As in the case of a moving sphere and a static convex polygon the closest features) 107.99 483.27 P
2.1 (between two moving convex polygons will not, usually) 107.99 462.27 P
2.1 (, change rapidly over time) 387.93 462.27 P
-0.14 ([Cohen) 107.99 441.27 P
2 F
-0.14 (et al) 146.18 441.27 P
0 F
-0.14 (. 1995, Ponamgi) 167.04 441.27 P
2 F
-0.14 (et al) 248.31 441.27 P
0 F
-0.14 (. 1995]. Therefore the search space may be restricted) 269.17 441.27 P
-0.07 (spatially) 107.99 420.27 P
-0.07 (. Future work will also involve prediction using paths of movement other than) 147.88 420.27 P
2.52 (polynomials; some paths may be represented by non-linear functions of time \050an) 107.99 399.27 P
-0.05 (example of which is a moving object being af) 107.99 378.27 P
-0.05 (fected by friction\051. One such method has) 326.67 378.27 P
0.09 (been proposed in [Sandoz & Sharkey 1994] that applies univariate optimisation meth-) 107.99 357.27 P
-0.23 (ods to the distance function) 107.99 336.27 P
-0.23 (. W) 268.34 336.27 P
-0.23 (e are at present augmenting this result to the algo-) 284.47 336.27 P
(rithms presented in this paper) 107.99 315.27 T
(.) 249.31 315.27 T
1 16 Q
(6   Refer) 107.99 267.6 T
(ences) 165.89 267.6 T
0 12 Q
(Boyse, J. W) 115.19 244.27 T
(. \0501979\051. Interference Detection among Solids and Surfaces.) 172.08 244.27 T
2 F
(Communi-) 463.01 244.27 T
(cations of the ACM) 151.19 230.27 T
0 F
(, 22\0501\051:29-37.) 244.19 230.27 T
(Canny) 115.19 202.27 T
(, J. \0501986\051. Collision Detection for Moving Polyhedra.) 145.74 202.27 T
2 F
(IEEE T) 409.73 202.27 T
(ransactions on) 444.73 202.27 T
(Pattern Analysis and Machine Intelligence) 151.19 188.27 T
0 F
(, 8\0502\051:200-209.) 356.5 188.27 T
(Carlsson, C. & Hagsand, O. \0501993\051. DIVE - a Platform for Multi-User V) 115.19 160.27 T
(irtual Envi-) 463.42 160.27 T
(ronments. Computers & Graphics, 17 \0506\051:663-669) 151.19 146.27 T
447.32 759.27 456.32 774.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 448.32 764.27 T
-0.01 0 595.29 841.89 C
275.73 738.27 291.44 753.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0 X
0 0 0 1 0 0 0 K
(2) 276.73 743.27 T
2 F
(n) 283.44 743.27 T
-0.01 0 595.29 841.89 C
491.35 717.27 500.35 732.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 492.35 722.27 T
-0.01 0 595.29 841.89 C
506.28 717.27 521.99 732.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0 X
0 0 0 1 0 0 0 K
(2) 507.28 722.27 T
2 F
(n) 513.99 722.27 T
-0.01 0 595.29 841.89 C
128.32 696.27 144.03 711.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0 X
0 0 0 1 0 0 0 K
(2) 129.32 701.27 T
2 F
(n) 136.02 701.27 T
-0.01 0 595.29 841.89 C
241.8 331.27 268.34 346.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
0 X
0 0 0 1 0 0 0 K
(D) 242.8 336.27 T
(t) 259.33 336.27 T
3 F
(\050) 254.18 336.27 T
(\051) 263.21 336.27 T
-0.01 0 595.29 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 13
%%Page: "14" 14
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(14) 316.61 71.27 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(Cohen, J. D., Lin, M. C., Manocha, D. & Ponamgi. M. K. \0501995\051.) 115.19 764.27 T
2 F
(I-COLLIDE: An) 432.84 764.27 T
(Interactive and Exact Collision Detection System for Lar) 151.19 750.27 T
(ge-Scale Envir) 424.39 750.27 T
(on-) 494.93 750.27 T
(ments) 151.19 736.27 T
0 F
(. 1995 Symposium on Interactive 3D Graphics, Monterey) 179.19 736.27 T
(, California.) 454.71 736.27 T
(Lin, M. C. \0501993\051.) 115.19 708.27 T
2 F
(Ef\336cient Collision Detection for Animation and Robotics) 206.52 708.27 T
0 F
(. PhD) 479.2 708.27 T
(thesis, University of California at Berkeley) 151.19 694.27 T
(, December 1993. Department of) 357.05 694.27 T
(Electrical Engineering and Computer Science.) 151.19 680.27 T
(Macedonia, M., Zyda, M., Pratt, D., Barham, P) 115.19 652.27 T
(. & Zeswitz, S. \0501994\051. A Network) 340.17 652.27 T
(Software Architecture for Lar) 151.19 638.27 T
(ge Scale Environments.) 293.92 638.27 T
2 F
(Pr) 410.57 638.27 T
(esence) 422.12 638.27 T
0 F
( 3 \0504\051.) 454.11 638.27 T
-0.24 (Ponamgi, M. K., Manocha, D. & Lin, M. C. \0501995\051.) 115.19 610.27 P
2 F
-0.24 (Incr) 364.82 610.27 P
-0.24 (emental algorithms for colli-) 384.36 610.27 P
(sion detection between solid models) 151.19 596.27 T
0 F
(. Proceedings of the Third ACM Sympo-) 323.85 596.27 T
(sium on Solid Modelling and Applications.) 151.19 582.27 T
(Preparata, F) 115.19 554.27 T
(. P) 172.21 554.27 T
(. & Shamos M. I. \0501985\051.) 183.55 554.27 T
2 F
(Computational Geometry) 307.55 554.27 T
0 F
(. Springer) 429.1 554.27 T
(-V) 476.19 554.27 T
(erlag,) 487.51 554.27 T
(New Y) 151.19 540.27 T
(ork.) 184.31 540.27 T
-0.25 (Press, W) 115.19 512.27 P
-0.25 (., T) 156.5 512.27 P
-0.25 (euolsky) 171.74 512.27 P
-0.25 (, A., V) 208.29 512.27 P
-0.25 (etterling, W) 238.8 512.27 P
-0.25 (., Flannery) 294.77 512.27 P
-0.25 (, B. \0501992\051.) 345.4 512.27 P
2 F
-0.25 (Numerical Recipes in C) 402.65 512.27 P
0 F
-0.25 (.) 516.24 512.27 P
(Cambridge University Press.) 151.19 498.27 T
-0.02 (Roberts, R., Sharkey) 115.19 470.27 P
-0.02 (, P) 214.02 470.27 P
-0.02 (., Sandoz, P) 225.34 470.27 P
-0.02 (. \0501995\051. A Real-T) 280.96 470.27 P
-0.02 (ime Predictive Architecture for) 369.45 470.27 P
(Distributed V) 151.19 456.27 T
(irtual Reality) 216.13 456.27 T
(. SIVE \32495, Iowa.) 278.35 456.27 T
-0.52 (Sandoz, P) 115.19 428.27 P
-0.52 (. & Sharkey) 161.34 428.27 P
-0.52 (, P) 217.18 428.27 P
-0.52 (. \0501994\051.) 228.01 428.27 P
2 F
-0.52 (Collision Pr) 270.96 428.27 P
-0.52 (ediction in Multi-User Arti\336cial W) 329.02 428.27 P
-0.52 (orlds) 491.84 428.27 P
0 F
-0.52 (.) 516.51 428.27 P
-0.2 (Proceedings of IEEE 1994 Computer intensive methods in control and signal) 151.19 414.27 P
(processing, Prague, Czech Republic.) 151.19 400.27 T
(Singhal, S. K. & Cheriton D. R. \0501995\051. Exploiting position history for ef) 115.19 372.27 T
(\336cient) 466.98 372.27 T
(remote rendering in networked virtual reality) 151.19 358.27 T
(.) 366.7 358.27 T
2 F
(Pr) 372.7 358.27 T
(esence) 384.25 358.27 T
0 F
(, 4\0502\051:169-193.) 416.23 358.27 T
(Sharkey) 115.19 330.27 T
(, P) 153.73 330.27 T
(. & Kumar) 165.07 330.27 T
(, A. \0501995\051.) 216.25 330.27 T
2 F
(V) 274.91 330.27 T
(irtual T) 281.35 330.27 T
(ime for V) 317.04 330.27 T
(irtual Envir) 360.82 330.27 T
(onments) 416.71 330.27 T
0 F
(. SPIE Inter-) 456.71 330.27 T
(national symposium on telemanipulation and telepresence II, Philadelphia,) 151.19 316.27 T
(USA.) 151.19 302.27 T
(W) 115.19 274.27 T
(ang, C. A. \0501994\051. Collision detection of a moving polygon in the presence of) 125.56 274.27 T
-0.17 (polygonal obstacles in the plane.) 151.19 260.27 P
2 F
-0.17 (IEEE T) 310.33 260.27 P
-0.17 (ransactions on Pattern Analysis and) 345.16 260.27 P
(Machine Intelligence) 151.19 246.27 T
0 F
(, 16 \0506\051:571-580.) 252.83 246.27 T
(Zyda, M. J., Osborne, W) 115.19 218.27 T
(. D., Monahan, J, G. & Pratt, D. R. \0501993\051. NPSNET) 233.07 218.27 T
(: real-) 485.79 218.27 T
(time collision detection and response.) 151.19 204.27 T
2 F
(The Journal of V) 335.17 204.27 T
(isualisation and Com-) 415.29 204.27 T
(puter Animation) 151.19 190.27 T
0 F
(, 4 \0501\051:13-24.) 229.53 190.27 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 14
%%Trailer
%%BoundingBox: 0 0 595.28 841.89
%%PageOrder: Ascend
%%Pages: 14
%%DocumentFonts: Times-Roman
%%+ Times-Bold
%%+ Times-Italic
%%+ Symbol
%%EOF
